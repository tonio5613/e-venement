Index: Application/src/main/res/layout/bureaulayout.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Application/src/main/res/layout/bureaulayout.xml	(revision )
+++ Application/src/main/res/layout/bureaulayout.xml	(revision )
@@ -0,0 +1,30 @@
+<?xml version="1.0" encoding="utf-8"?>
+<TableLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="fill_parent" android:layout_height="fill_parent"
+
+    >
+    <TableRow
+        android:orientation="vertical"
+        android:layout_height="wrap_content"
+        android:layout_width="wrap_content"
+        android:padding="4dp">
+        <TextView
+            android:id="@+id/scan_title"
+            android:text="@string/e_control_text"/>
+        <ImageButton
+            android:layout_height="wrap_content"
+            android:layout_width="wrap_content"
+            android:id="@+id/lauchscan"
+            android:layout_gravity="top"
+            android:maxHeight="100dp"
+            android:maxWidth="100dp"
+            android:src="@drawable/ic_scan_launcher"
+            android:onClick="Scan_ticket_fragment"
+            />
+
+    </TableRow>
+    <TableRow>
+
+    </TableRow>
+
+</TableLayout>
\ No newline at end of file
Index: Application/src/main/res/layout-land/sample_main.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Application/src/main/res/layout-land/sample_main.xml	(revision )
+++ Application/src/main/res/layout-land/sample_main.xml	(revision )
@@ -0,0 +1,42 @@
+<?xml version="1.0" encoding="utf-8"?>
+
+<!--
+  Copyright 2013 The Android Open Source Project
+
+  Licensed under the Apache License, Version 2.0 (the "License");
+  you may not use this file except in compliance with the License.
+  You may obtain a copy of the License at
+
+      http://www.apache.org/licenses/LICENSE-2.0
+
+  Unless required by applicable law or agreed to in writing, software
+  distributed under the License is distributed on an "AS IS" BASIS,
+  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+  See the License for the specific language governing permissions and
+  limitations under the License.
+  -->
+
+<LinearLayout
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:orientation="vertical"
+    android:layout_width="fill_parent"
+    android:layout_height="fill_parent">
+    <fragment
+        android:name="com.example.android.networkconnect.SimpleTextFragment"
+        android:id="@+id/intro_fragment"
+        android:layout_weight="1"
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        tools:layout="@layout/sample_main" />
+    <View
+        android:layout_width="fill_parent"
+        android:layout_height="1dp"
+        android:background="@android:color/darker_gray"/>
+    <fragment
+        android:name="com.example.android.common.logger.LogFragment"
+        android:id="@+id/log_fragment"
+        android:layout_weight="1"
+        android:layout_width="match_parent"
+        android:layout_height="match_parent" />
+</LinearLayout>
Index: Application/src/main/AndroidManifest.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Application/src/main/AndroidManifest.xml	(revision )
+++ Application/src/main/AndroidManifest.xml	(revision )
@@ -0,0 +1,51 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!--
+ Copyright 2013 The Android Open Source Project
+
+ Licensed under the Apache License, Version 2.0 (the "License");
+ you may not use this file except in compliance with the License.
+ You may obtain a copy of the License at
+
+     http://www.apache.org/licenses/LICENSE-2.0
+
+ Unless required by applicable law or agreed to in writing, software
+ distributed under the License is distributed on an "AS IS" BASIS,
+ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ See the License for the specific language governing permissions and
+ limitations under the License.
+-->
+
+
+
+<manifest
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    package="com.example.android.networkconnect"
+    android:versionCode="1"
+    android:versionName="1.0">
+    <uses-feature android:name="android.hardware.usb.UsbAccessory" />
+    <!-- Min/target SDK versions (<uses-sdk>) managed by build.gradle -->
+    <uses-permission android:name="android.permission.INTERNET" />
+    <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />
+    <application
+        android:label="@string/app_name"
+        android:icon="@drawable/ic_launcher_evenement"
+        android:theme="@style/Theme.Sample"
+        android:allowBackup="true">
+
+        <activity
+            android:name="com.example.android.networkconnect.MainActivity"
+            android:label="@string/app_name"
+            android:uiOptions="splitActionBarWhenNarrow"
+            android:screenOrientation="fullSensor">
+
+            <intent-filter>
+                <action android:name="android.intent.action.MAIN" />
+                <category android:name="android.intent.category.LAUNCHER" />
+            </intent-filter>
+            <intent-filter>
+                <action android:name="android.hardware.usb.action.USB_DEVICE_ATTACHED" />
+            </intent-filter>
+
+          </activity>
+    </application>
+</manifest>
Index: Application/src/main/java/com/example/android/common/logger/LogView.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Application/src/main/java/com/example/android/common/logger/LogView.java	(revision )
+++ Application/src/main/java/com/example/android/common/logger/LogView.java	(revision )
@@ -0,0 +1,145 @@
+/*
+ * Copyright (C) 2013 The Android Open Source Project
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+package com.example.android.common.logger;
+
+import android.app.Activity;
+import android.content.Context;
+import android.util.*;
+import android.widget.TextView;
+
+/** Simple TextView which is used to output log data received through the LogNode interface.
+*/
+public class LogView extends TextView implements LogNode {
+
+    public LogView(Context context) {
+        super(context);
+    }
+
+    public LogView(Context context, AttributeSet attrs) {
+        super(context, attrs);
+    }
+
+    public LogView(Context context, AttributeSet attrs, int defStyle) {
+        super(context, attrs, defStyle);
+    }
+
+    /**
+     * Formats the log data and prints it out to the LogView.
+     * @param priority Log level of the data being logged.  Verbose, Error, etc.
+     * @param tag Tag for for the log data.  Can be used to organize log statements.
+     * @param msg The actual message to be logged. The actual message to be logged.
+     * @param tr If an exception was thrown, this can be sent along for the logging facilities
+     *           to extract and print useful information.
+     */
+    @Override
+    public void println(int priority, String tag, String msg, Throwable tr) {
+
+        
+        String priorityStr = null;
+
+        // For the purposes of this View, we want to print the priority as readable text.
+        switch(priority) {
+            case android.util.Log.VERBOSE:
+                priorityStr = "VERBOSE";
+                break;
+            case android.util.Log.DEBUG:
+                priorityStr = "DEBUG";
+                break;
+            case android.util.Log.INFO:
+                priorityStr = "INFO";
+                break;
+            case android.util.Log.WARN:
+                priorityStr = "WARN";
+                break;
+            case android.util.Log.ERROR:
+                priorityStr = "ERROR";
+                break;
+            case android.util.Log.ASSERT:
+                priorityStr = "ASSERT";
+                break;
+            default:
+                break;
+        }
+
+        // Handily, the Log class has a facility for converting a stack trace into a usable string.
+        String exceptionStr = null;
+        if (tr != null) {
+            exceptionStr = android.util.Log.getStackTraceString(tr);
+        }
+
+        // Take the priority, tag, message, and exception, and concatenate as necessary
+        // into one usable line of text.
+        final StringBuilder outputBuilder = new StringBuilder();
+
+        String delimiter = "\t";
+        appendIfNotNull(outputBuilder, priorityStr, delimiter);
+        appendIfNotNull(outputBuilder, tag, delimiter);
+        appendIfNotNull(outputBuilder, msg, delimiter);
+        appendIfNotNull(outputBuilder, exceptionStr, delimiter);
+
+        // In case this was originally called from an AsyncTask or some other off-UI thread,
+        // make sure the update occurs within the UI thread.
+        ((Activity) getContext()).runOnUiThread( (new Thread(new Runnable() {
+            @Override
+            public void run() {
+                // Display the text we just generated within the LogView.
+                appendToLog(outputBuilder.toString());
+            }
+        })));
+
+        if (mNext != null) {
+            mNext.println(priority, tag, msg, tr);
+        }
+    }
+
+    public LogNode getNext() {
+        return mNext;
+    }
+
+    public void setNext(LogNode node) {
+        mNext = node;
+    }
+
+    /** Takes a string and adds to it, with a separator, if the bit to be added isn't null. Since
+     * the logger takes so many arguments that might be null, this method helps cut out some of the
+     * agonizing tedium of writing the same 3 lines over and over.
+     * @param source StringBuilder containing the text to append to.
+     * @param addStr The String to append
+     * @param delimiter The String to separate the source and appended strings. A tab or comma,
+     *                  for instance.
+     * @return The fully concatenated String as a StringBuilder
+     */
+    private StringBuilder appendIfNotNull(StringBuilder source, String addStr, String delimiter) {
+        if (addStr != null) {
+            if (addStr.length() == 0) {
+                delimiter = "";
+            }
+
+            return source.append(addStr).append(delimiter);
+        }
+        return source;
+    }
+
+    // The next LogNode in the chain.
+    LogNode mNext;
+
+    /** Outputs the string as a new line of log data in the LogView. */
+    public void appendToLog(String s) {
+        append("\n" + s);
+    }
+
+
+}
Index: Application/src/main/res/values/strings.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Application/src/main/res/values/strings.xml	(revision )
+++ Application/src/main/res/values/strings.xml	(revision )
@@ -0,0 +1,28 @@
+<!--
+  Copyright 2013 The Android Open Source Project
+
+  Licensed under the Apache License, Version 2.0 (the "License");
+  you may not use this file except in compliance with the License.
+  You may obtain a copy of the License at
+
+      http://www.apache.org/licenses/LICENSE-2.0
+
+  Unless required by applicable law or agreed to in writing, software
+  distributed under the License is distributed on an "AS IS" BASIS,
+  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+  See the License for the specific language governing permissions and
+  limitations under the License.
+  -->
+
+<resources>
+    <string name="welcome_message">Bonjour, clic sur envoyer pour lancer une requete Http</string>
+    <string name="login_text">Login</string>
+    <string name="fetch_text">Envoyer</string>
+    <string name="clear_text">Quitter</string>
+    <string name="connection_error">Connection error.</string>
+    <string name="eve_android_text">eve-android</string>
+    <string name="e_control_text">e-control</string>
+    <string name="sav_log">Se souvenir de moi</string>
+    <string name="ok">Ok</string>
+    <string name="Annuler">Annuler</string>
+</resources>
Index: Application/src/main/java/com/example/android/common/logger/LogWrapper.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Application/src/main/java/com/example/android/common/logger/LogWrapper.java	(revision )
+++ Application/src/main/java/com/example/android/common/logger/LogWrapper.java	(revision )
@@ -0,0 +1,75 @@
+/*
+ * Copyright (C) 2012 The Android Open Source Project
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+package com.example.android.common.logger;
+
+import android.util.Log;
+
+/**
+ * Helper class which wraps Android's native Log utility in the Logger interface.  This way
+ * normal DDMS output can be one of the many targets receiving and outputting logs simultaneously.
+ */
+public class LogWrapper implements LogNode {
+
+    // For piping:  The next node to receive Log data after this one has done its work.
+    private LogNode mNext;
+
+    /**
+     * Returns the next LogNode in the linked list.
+     */
+    public LogNode getNext() {
+        return mNext;
+    }
+
+    /**
+     * Sets the LogNode data will be sent to..
+     */
+    public void setNext(LogNode node) {
+        mNext = node;
+    }
+
+    /**
+     * Prints data out to the console using Android's native log mechanism.
+     * @param priority Log level of the data being logged.  Verbose, Error, etc.
+     * @param tag Tag for for the log data.  Can be used to organize log statements.
+     * @param msg The actual message to be logged. The actual message to be logged.
+     * @param tr If an exception was thrown, this can be sent along for the logging facilities
+     *           to extract and print useful information.
+     */
+    @Override
+    public void println(int priority, String tag, String msg, Throwable tr) {
+        // There actually are log methods that don't take a msg parameter.  For now,
+        // if that's the case, just convert null to the empty string and move on.
+        String useMsg = msg;
+        if (useMsg == null) {
+            useMsg = "";
+        }
+
+        // If an exeption was provided, convert that exception to a usable string and attach
+        // it to the end of the msg method.
+        if (tr != null) {
+            msg += "\n" + Log.getStackTraceString(tr);
+        }
+
+        // This is functionally identical to Log.x(tag, useMsg);
+        // For instance, if priority were Log.VERBOSE, this would be the same as Log.v(tag, useMsg)
+        Log.println(priority, tag, useMsg);
+
+        // If this isn't the last node in the chain, move things along.
+        if (mNext != null) {
+            mNext.println(priority, tag, msg, tr);
+        }
+    }
+}
Index: Application/build/generated/source/r/debug/android/support/v7/cardview/R.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Application/build/generated/source/r/debug/android/support/v7/cardview/R.java	(revision )
+++ Application/build/generated/source/r/debug/android/support/v7/cardview/R.java	(revision )
@@ -0,0 +1,53 @@
+/* AUTO-GENERATED FILE.  DO NOT MODIFY.
+ *
+ * This class was automatically generated by the
+ * aapt tool from the resource data it found.  It
+ * should not be modified by hand.
+ */
+package android.support.v7.cardview;
+
+public final class R {
+	public static final class attr {
+		public static final int cardBackgroundColor = 0x7f010000;
+		public static final int cardCornerRadius = 0x7f010001;
+		public static final int cardElevation = 0x7f010002;
+		public static final int cardMaxElevation = 0x7f010003;
+		public static final int cardPreventCornerOverlap = 0x7f010005;
+		public static final int cardUseCompatPadding = 0x7f010004;
+		public static final int contentPadding = 0x7f010006;
+		public static final int contentPaddingBottom = 0x7f01000a;
+		public static final int contentPaddingLeft = 0x7f010007;
+		public static final int contentPaddingRight = 0x7f010008;
+		public static final int contentPaddingTop = 0x7f010009;
+	}
+	public static final class color {
+		public static final int cardview_dark_background = 0x7f040000;
+		public static final int cardview_light_background = 0x7f040001;
+		public static final int cardview_shadow_end_color = 0x7f040002;
+		public static final int cardview_shadow_start_color = 0x7f040003;
+	}
+	public static final class dimen {
+		public static final int cardview_compat_inset_shadow = 0x7f050000;
+		public static final int cardview_default_elevation = 0x7f050001;
+		public static final int cardview_default_radius = 0x7f050002;
+	}
+	public static final class style {
+		public static final int CardView = 0x7f070001;
+		public static final int CardView_Dark = 0x7f070002;
+		public static final int CardView_Light = 0x7f070003;
+	}
+	public static final class styleable {
+		public static final int[] CardView = { 0x7f010000, 0x7f010001, 0x7f010002, 0x7f010003, 0x7f010004, 0x7f010005, 0x7f010006, 0x7f010007, 0x7f010008, 0x7f010009, 0x7f01000a };
+		public static final int CardView_cardBackgroundColor = 0;
+		public static final int CardView_cardCornerRadius = 1;
+		public static final int CardView_cardElevation = 2;
+		public static final int CardView_cardMaxElevation = 3;
+		public static final int CardView_cardPreventCornerOverlap = 5;
+		public static final int CardView_cardUseCompatPadding = 4;
+		public static final int CardView_contentPadding = 6;
+		public static final int CardView_contentPaddingBottom = 10;
+		public static final int CardView_contentPaddingLeft = 7;
+		public static final int CardView_contentPaddingRight = 8;
+		public static final int CardView_contentPaddingTop = 9;
+	}
+}
Index: Application/src/main/res/values-v21/base-template-styles.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Application/src/main/res/values-v21/base-template-styles.xml	(revision )
+++ Application/src/main/res/values-v21/base-template-styles.xml	(revision )
@@ -0,0 +1,23 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!--
+ Copyright 2013 The Android Open Source Project
+
+ Licensed under the Apache License, Version 2.0 (the "License");
+ you may not use this file except in compliance with the License.
+ You may obtain a copy of the License at
+
+     http://www.apache.org/licenses/LICENSE-2.0
+
+ Unless required by applicable law or agreed to in writing, software
+ distributed under the License is distributed on an "AS IS" BASIS,
+ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ See the License for the specific language governing permissions and
+ limitations under the License.
+-->
+<resources>
+
+    <!-- Activity themes -->
+    <style name="Theme.Base" parent="android:Theme.Material.Light">
+    </style>
+
+</resources>
Index: Application/build/intermediates/exploded-aar/com.android.support/support-v4/21.0.2/AndroidManifest.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Application/build/intermediates/exploded-aar/com.android.support/support-v4/21.0.2/AndroidManifest.xml	(revision )
+++ Application/build/intermediates/exploded-aar/com.android.support/support-v4/21.0.2/AndroidManifest.xml	(revision )
@@ -0,0 +1,17 @@
+<!-- Copyright (C) 2014 The Android Open Source Project
+
+     Licensed under the Apache License, Version 2.0 (the "License");
+     you may not use this file except in compliance with the License.
+     You may obtain a copy of the License at
+
+          http://www.apache.org/licenses/LICENSE-2.0
+
+     Unless required by applicable law or agreed to in writing, software
+     distributed under the License is distributed on an "AS IS" BASIS,
+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+     See the License for the specific language governing permissions and
+     limitations under the License.
+--><manifest xmlns:android="http://schemas.android.com/apk/res/android" package="android.support.v4">
+    <uses-sdk android:minSdkVersion="4"/>
+    <application/>
+</manifest>
Index: Application/Application.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Application/Application.iml	(revision )
+++ Application/Application.iml	(revision )
@@ -0,0 +1,98 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<module external.linked.project.path="$MODULE_DIR$" external.root.project.path="$MODULE_DIR$/.." external.system.id="GRADLE" external.system.module.group="NetworkConnect" external.system.module.version="unspecified" type="JAVA_MODULE" version="4">
+  <component name="FacetManager">
+    <facet type="android-gradle" name="Android-Gradle">
+      <configuration>
+        <option name="GRADLE_PROJECT_PATH" value=":Application" />
+      </configuration>
+    </facet>
+    <facet type="android" name="Android">
+      <configuration>
+        <option name="SELECTED_BUILD_VARIANT" value="debug" />
+        <option name="SELECTED_TEST_ARTIFACT" value="_android_test_" />
+        <option name="ASSEMBLE_TASK_NAME" value="assembleDebug" />
+        <option name="COMPILE_JAVA_TASK_NAME" value="compileDebugSources" />
+        <option name="ASSEMBLE_TEST_TASK_NAME" value="assembleDebugTest" />
+        <option name="SOURCE_GEN_TASK_NAME" value="generateDebugSources" />
+        <option name="TEST_SOURCE_GEN_TASK_NAME" value="generateDebugTestSources" />
+        <option name="ALLOW_USER_CONFIGURATION" value="false" />
+        <option name="MANIFEST_FILE_RELATIVE_PATH" value="/src/main/AndroidManifest.xml" />
+        <option name="RES_FOLDER_RELATIVE_PATH" value="/src/main/res" />
+        <option name="RES_FOLDERS_RELATIVE_PATH" value="file://$MODULE_DIR$/src/main/res" />
+        <option name="ASSETS_FOLDER_RELATIVE_PATH" value="/src/main/assets" />
+      </configuration>
+    </facet>
+  </component>
+  <component name="NewModuleRootManager" inherit-compiler-output="false">
+    <output url="file://$MODULE_DIR$/build/intermediates/classes/debug" />
+    <output-test url="file://$MODULE_DIR$/build/intermediates/classes/test/debug" />
+    <exclude-output />
+    <content url="file://$MODULE_DIR$">
+      <sourceFolder url="file://$MODULE_DIR$/build/generated/source/r/debug" isTestSource="false" generated="true" />
+      <sourceFolder url="file://$MODULE_DIR$/build/generated/source/aidl/debug" isTestSource="false" generated="true" />
+      <sourceFolder url="file://$MODULE_DIR$/build/generated/source/buildConfig/debug" isTestSource="false" generated="true" />
+      <sourceFolder url="file://$MODULE_DIR$/build/generated/source/rs/debug" isTestSource="false" generated="true" />
+      <sourceFolder url="file://$MODULE_DIR$/build/generated/res/rs/debug" type="java-resource" />
+      <sourceFolder url="file://$MODULE_DIR$/build/generated/res/generated/debug" type="java-resource" />
+      <sourceFolder url="file://$MODULE_DIR$/build/generated/source/r/test/debug" isTestSource="true" generated="true" />
+      <sourceFolder url="file://$MODULE_DIR$/build/generated/source/aidl/test/debug" isTestSource="true" generated="true" />
+      <sourceFolder url="file://$MODULE_DIR$/build/generated/source/buildConfig/test/debug" isTestSource="true" generated="true" />
+      <sourceFolder url="file://$MODULE_DIR$/build/generated/source/rs/test/debug" isTestSource="true" generated="true" />
+      <sourceFolder url="file://$MODULE_DIR$/build/generated/res/rs/test/debug" type="java-test-resource" />
+      <sourceFolder url="file://$MODULE_DIR$/build/generated/res/generated/test/debug" type="java-test-resource" />
+      <sourceFolder url="file://$MODULE_DIR$/src/debug/res" type="java-resource" />
+      <sourceFolder url="file://$MODULE_DIR$/src/debug/resources" type="java-resource" />
+      <sourceFolder url="file://$MODULE_DIR$/src/debug/assets" type="java-resource" />
+      <sourceFolder url="file://$MODULE_DIR$/src/debug/aidl" isTestSource="false" />
+      <sourceFolder url="file://$MODULE_DIR$/src/debug/java" isTestSource="false" />
+      <sourceFolder url="file://$MODULE_DIR$/src/debug/jni" isTestSource="false" />
+      <sourceFolder url="file://$MODULE_DIR$/src/debug/rs" isTestSource="false" />
+      <sourceFolder url="file://$MODULE_DIR$/src/main/res" type="java-resource" />
+      <sourceFolder url="file://$MODULE_DIR$/src/common/res" type="java-resource" />
+      <sourceFolder url="file://$MODULE_DIR$/src/template/res" type="java-resource" />
+      <sourceFolder url="file://$MODULE_DIR$/src/main/resources" type="java-resource" />
+      <sourceFolder url="file://$MODULE_DIR$/src/main/assets" type="java-resource" />
+      <sourceFolder url="file://$MODULE_DIR$/src/main/aidl" isTestSource="false" />
+      <sourceFolder url="file://$MODULE_DIR$/src/main/java" isTestSource="false" />
+      <sourceFolder url="file://$MODULE_DIR$/src/common/java" isTestSource="false" />
+      <sourceFolder url="file://$MODULE_DIR$/src/template/java" isTestSource="false" />
+      <sourceFolder url="file://$MODULE_DIR$/src/main/jni" isTestSource="false" />
+      <sourceFolder url="file://$MODULE_DIR$/src/main/rs" isTestSource="false" />
+      <sourceFolder url="file://$MODULE_DIR$/tests/res" type="java-test-resource" />
+      <sourceFolder url="file://$MODULE_DIR$/tests/resources" type="java-test-resource" />
+      <sourceFolder url="file://$MODULE_DIR$/tests/assets" type="java-test-resource" />
+      <sourceFolder url="file://$MODULE_DIR$/tests/aidl" isTestSource="true" />
+      <sourceFolder url="file://$MODULE_DIR$/tests/src" isTestSource="true" />
+      <sourceFolder url="file://$MODULE_DIR$/tests/jni" isTestSource="true" />
+      <sourceFolder url="file://$MODULE_DIR$/tests/rs" isTestSource="true" />
+      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/assets" />
+      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/bundles" />
+      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/classes" />
+      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/coverage-instrumented-classes" />
+      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/dependency-cache" />
+      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/dex" />
+      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/dex-cache" />
+      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/incremental" />
+      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/jacoco" />
+      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/javaResources" />
+      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/libs" />
+      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/lint" />
+      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/manifests" />
+      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/ndk" />
+      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/pre-dexed" />
+      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/proguard" />
+      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/res" />
+      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/rs" />
+      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/symbols" />
+      <excludeFolder url="file://$MODULE_DIR$/build/outputs" />
+      <excludeFolder url="file://$MODULE_DIR$/build/tmp" />
+    </content>
+    <orderEntry type="jdk" jdkName="Android API 21 Platform" jdkType="Android SDK" />
+    <orderEntry type="sourceFolder" forTests="false" />
+    <orderEntry type="library" exported="" name="support-annotations-21.0.2" level="project" />
+    <orderEntry type="library" exported="" name="support-v4-21.0.2" level="project" />
+    <orderEntry type="library" exported="" name="gridlayout-v7-21.0.2" level="project" />
+    <orderEntry type="library" exported="" name="cardview-v7-21.0.2" level="project" />
+  </component>
+</module>
+
Index: Application/src/main/java/com/example/android/networkconnect/LoginDialog.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Application/src/main/java/com/example/android/networkconnect/LoginDialog.java	(revision )
+++ Application/src/main/java/com/example/android/networkconnect/LoginDialog.java	(revision )
@@ -0,0 +1,278 @@
+package com.example.android.networkconnect;
+
+
+import android.app.AlertDialog;
+import android.app.Dialog;
+import android.content.Context;
+import android.content.DialogInterface;
+import android.content.SharedPreferences;
+import android.os.AsyncTask;
+import android.os.Bundle;
+import android.preference.CheckBoxPreference;
+import android.preference.PreferenceManager;
+import android.support.v4.app.DialogFragment;
+import android.view.LayoutInflater;
+import android.view.View;
+import android.widget.CheckBox;
+import android.widget.EditText;
+import android.widget.Toast;
+
+import org.json.JSONException;
+import org.json.JSONObject;
+
+import java.io.FileInputStream;
+import java.io.FileOutputStream;
+import java.io.IOException;
+import java.io.InputStream;
+import java.io.InputStreamReader;
+import java.io.OutputStreamWriter;
+import java.io.Reader;
+import java.io.UnsupportedEncodingException;
+import java.net.HttpURLConnection;
+import java.net.URL;
+
+/**
+ * Created by adonniou on 16/04/15.
+ */
+public class LoginDialog extends DialogFragment {
+
+    private PreferenceManager mPreference;
+    private JSONObject jsonLog_save;
+
+    @Override
+    public Dialog onCreateDialog(Bundle savedInstanceState) {
+        //return super.onCreateDialog(savedInstanceState);
+        AlertDialog.Builder builder = new AlertDialog.Builder(getActivity());
+        // Get the layout inflater
+        LayoutInflater inflater = getActivity().getLayoutInflater();
+
+        final View alertDialogView = inflater.inflate(R.layout.login_dialog, null);
+        final EditText login = (EditText) alertDialogView.findViewById(R.id.username);
+        final EditText hote = (EditText) alertDialogView.findViewById(R.id.hote);
+        final EditText pass =(EditText) alertDialogView.findViewById(R.id.password);
+        final CheckBox checkBox_save = (CheckBox) alertDialogView.findViewById(R.id.save_log);
+
+        builder.setView(alertDialogView);
+
+        if (Read_log(getActivity()) != null) {
+           // login.setText(Read_log(getActivity()),null);
+            try {
+                JSONObject js=Read_log(getActivity());
+
+                login.setText(js.getString("login"),null);
+                pass.setText(js.getString("pass"),null);
+
+            } catch (JSONException e) {
+                e.printStackTrace();
+            }
+        }
+
+        builder.setTitle("Login");
+
+
+        // Inflate and set the layout for the dialog
+        // Pass null as the parent view because its going in the dialog layout
+        AlertDialog.Builder builder1 = builder.setView(alertDialogView)
+                .setPositiveButton(R.string.ok, new DialogInterface.OnClickListener() {
+                    public void onClick(DialogInterface dialog, int id) {
+
+                        try {
+//récuperer le login + trim + minuscule
+                            String log = login.getText().toString();
+                            log = log.trim();
+                            log = log.toLowerCase();
+
+//récuperer le pass + trim + minuscule
+                            String pas = pass.getText().toString();
+                            pas = pas.trim();
+                            pas = pas.toLowerCase();
+
+                            JSONObject JSONLogin=new JSONObject();
+
+
+//sauvegarde en local du login
+                            //
+                            DownloadTask requete = new DownloadTask();
+
+                         if (checkBox_save.isChecked()) {
+                                jsonLog_save = new JSONObject();
+                                jsonLog_save.put("login",log).toString();
+                                jsonLog_save.put("pass",pas).toString();
+                                Save_log(getActivity(), jsonLog_save);
+                                //signin[remember]
+                            }
+
+                        } catch (Exception e) {
+                            e.printStackTrace();
+                            Toast.makeText(getActivity(), "Erreur save login: " + e, Toast.LENGTH_SHORT).show();
+                        }
+                    }
+                })
+                .setNegativeButton(R.string.Annuler, new DialogInterface.OnClickListener() {
+                    public void onClick(DialogInterface dialog, int id) {
+                        // User cancelled the dialog
+                    }
+                });
+        // Create the AlertDialog object and return it
+        return builder.create();
+    }
+
+    /**
+     * Implementation of AsyncTask, to fetch the login data in the background away from
+     * the UI thread.
+     */
+    private class DownloadTask extends AsyncTask<String, Void, String> {
+
+        @Override
+        protected String doInBackground(String... urls) {
+            try {
+
+                return loadFromNetwork(urls[0]);
+            } catch (IOException e) {
+                return getString(R.string.connection_error);
+            }
+        }
+
+        /**
+         * Uses the logging framework to display the output of the fetch
+         * operation in the log fragment.
+         */
+        @Override
+        protected void onPostExecute(String result) {
+           // Log.i(TAG, result);
+            //affichage du resultat dans un toast
+           Toast.makeText(getActivity(), "Result: " + result, Toast.LENGTH_SHORT).show();
+
+        }
+    }
+
+    /**
+     * Initiates the fetch operation.
+     */
+    private String loadFromNetwork(String urlString) throws IOException {
+        InputStream stream = null;
+        String str = "";
+
+        try {
+            stream = downloadUrl(urlString);
+            str = readIt(stream, 500);
+        } finally {
+            if (stream != null) {
+                stream.close();
+            }
+        }
+        return str;
+    }
+
+    /**
+     * Given a string representation of a URL, sets up a connection and gets
+     * an input stream.
+     *
+     * @param urlString A string representation of a URL.
+     * @return An InputStream retrieved from a successful HttpURLConnection.
+     * @throws java.io.IOException
+     */
+    private InputStream downloadUrl(String urlString) throws IOException {
+        // BEGIN_INCLUDE(get_inputstream)
+        URL url = new URL(urlString);
+        HttpURLConnection conn = (HttpURLConnection) url.openConnection();
+        conn.setReadTimeout(10000 /* milliseconds */);
+        conn.setConnectTimeout(15000 /* milliseconds */);
+        conn.setRequestMethod("GET");
+        //conn.setRequestProperty("User-Agent", "e-venement-app/");
+        conn.setDoInput(true);
+        // Start the query
+        //Toast.makeText(getActivity(), "Connection Code: " + conn.getResponseCode(), Toast.LENGTH_SHORT).show();
+
+        conn.connect();
+
+        InputStream stream = conn.getInputStream();
+        return stream;
+        // END_INCLUDE(get_inputstream)
+    }
+
+    /**
+     * Reads an InputStream and converts it to a String.
+     *
+     * @param stream InputStream containing HTML from targeted site.
+     * @param len    Length of string that this method returns.
+     * @return String concatenated according to len parameter.
+     * @throws java.io.IOException
+     * @throws java.io.UnsupportedEncodingException
+     */
+    private String readIt(InputStream stream, int len) throws IOException, UnsupportedEncodingException {
+        char[] buffer = new char[0];
+            Reader reader = null;
+            reader = new InputStreamReader(stream, "UTF-8");
+            buffer = new char[len];
+            reader.read(buffer);
+        return new String(buffer);
+    }
+
+    private void Save_log (Context context,JSONObject sav_log)
+    {
+        FileOutputStream fOut = null;
+        OutputStreamWriter osw = null;
+
+        if(Read_log(context)!=null)
+        {
+            Toast.makeText(context, "Compte existant: ",Toast.LENGTH_SHORT).show();
+
+        }
+        else {
+            try {
+                fOut = context.openFileOutput("settings.txt", Context.MODE_APPEND);
+                osw = new OutputStreamWriter(fOut);
+
+                osw.write(sav_log.toString());
+                osw.flush();
+                //popup surgissant pour le résultat
+                Toast.makeText(context, "Settings saved", Toast.LENGTH_SHORT).show();
+            } catch (Exception e) {
+                Toast.makeText(context, "Settings not saved", Toast.LENGTH_SHORT).show();
+            } finally {
+                try {
+                    osw.close();
+                    fOut.close();
+                } catch (IOException e) {
+                    Toast.makeText(context, "Settings not saved", Toast.LENGTH_SHORT).show();
+                }
+            }
+        }
+    }
+
+    private JSONObject Read_log(Context context)
+    {
+        FileInputStream fIn = null;
+        InputStreamReader isr = null;
+
+        char[] inputBuffer = new char[255];
+        String data = null;
+
+        JSONObject json=null;
+
+        try{
+            fIn = context.openFileInput("settings.txt");
+            isr = new InputStreamReader(fIn);
+            isr.read(inputBuffer);
+            data = new String(inputBuffer);
+            //affiche le contenu de mon fichier dans un popup surgissant
+            Toast.makeText(context, "data: "+data,Toast.LENGTH_SHORT).show();
+            json=new JSONObject(data);
+
+        }
+        catch (Exception e) {
+            Toast.makeText(context, "Settings not read",Toast.LENGTH_SHORT).show();
+        }
+            /*finally {
+               try {
+                      isr.close();
+                      fIn.close();
+                      } catch (IOException e) {
+                        Toast.makeText(context, "Settings not read",Toast.LENGTH_SHORT).show();
+                      }
+            } */
+        return json;
+    }
+
+}
Index: Application/build/intermediates/exploded-aar/com.android.support/gridlayout-v7/21.0.2/R.txt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Application/build/intermediates/exploded-aar/com.android.support/gridlayout-v7/21.0.2/R.txt	(revision )
+++ Application/build/intermediates/exploded-aar/com.android.support/gridlayout-v7/21.0.2/R.txt	(revision )
@@ -0,0 +1,56 @@
+int attr alignmentMode 0x7f010004
+int attr columnCount 0x7f010002
+int attr columnOrderPreserved 0x7f010006
+int attr layout_column 0x7f01000a
+int attr layout_columnSpan 0x7f01000b
+int attr layout_columnWeight 0x7f01000c
+int attr layout_gravity 0x7f01000d
+int attr layout_row 0x7f010007
+int attr layout_rowSpan 0x7f010008
+int attr layout_rowWeight 0x7f010009
+int attr orientation 0x7f010000
+int attr rowCount 0x7f010001
+int attr rowOrderPreserved 0x7f010005
+int attr useDefaultMargins 0x7f010003
+int dimen default_gap 0x7f020000
+int id alignBounds 0x7f030002
+int id alignMargins 0x7f030003
+int id bottom 0x7f030004
+int id center 0x7f030005
+int id center_horizontal 0x7f030006
+int id center_vertical 0x7f030007
+int id clip_horizontal 0x7f030008
+int id clip_vertical 0x7f030009
+int id end 0x7f03000a
+int id fill 0x7f03000b
+int id fill_horizontal 0x7f03000c
+int id fill_vertical 0x7f03000d
+int id horizontal 0x7f030000
+int id left 0x7f03000e
+int id right 0x7f03000f
+int id start 0x7f030010
+int id top 0x7f030011
+int id vertical 0x7f030001
+int[] styleable GridLayout { 0x7f010000, 0x7f010001, 0x7f010002, 0x7f010003, 0x7f010004, 0x7f010005, 0x7f010006 }
+int styleable GridLayout_alignmentMode 4
+int styleable GridLayout_columnCount 2
+int styleable GridLayout_columnOrderPreserved 6
+int styleable GridLayout_orientation 0
+int styleable GridLayout_rowCount 1
+int styleable GridLayout_rowOrderPreserved 5
+int styleable GridLayout_useDefaultMargins 3
+int[] styleable GridLayout_Layout { 0x010100f4, 0x010100f5, 0x010100f6, 0x010100f7, 0x010100f8, 0x010100f9, 0x010100fa, 0x7f010007, 0x7f010008, 0x7f010009, 0x7f01000a, 0x7f01000b, 0x7f01000c, 0x7f01000d }
+int styleable GridLayout_Layout_android_layout_height 1
+int styleable GridLayout_Layout_android_layout_margin 2
+int styleable GridLayout_Layout_android_layout_marginBottom 6
+int styleable GridLayout_Layout_android_layout_marginLeft 3
+int styleable GridLayout_Layout_android_layout_marginRight 5
+int styleable GridLayout_Layout_android_layout_marginTop 4
+int styleable GridLayout_Layout_android_layout_width 0
+int styleable GridLayout_Layout_layout_column 10
+int styleable GridLayout_Layout_layout_columnSpan 11
+int styleable GridLayout_Layout_layout_columnWeight 12
+int styleable GridLayout_Layout_layout_gravity 13
+int styleable GridLayout_Layout_layout_row 7
+int styleable GridLayout_Layout_layout_rowSpan 8
+int styleable GridLayout_Layout_layout_rowWeight 9
Index: Application/build/intermediates/exploded-aar/com.android.support/cardview-v7/21.0.2/R.txt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Application/build/intermediates/exploded-aar/com.android.support/cardview-v7/21.0.2/R.txt	(revision )
+++ Application/build/intermediates/exploded-aar/com.android.support/cardview-v7/21.0.2/R.txt	(revision )
@@ -0,0 +1,33 @@
+int attr cardBackgroundColor 0x7f010000
+int attr cardCornerRadius 0x7f010001
+int attr cardElevation 0x7f010002
+int attr cardMaxElevation 0x7f010003
+int attr cardPreventCornerOverlap 0x7f010005
+int attr cardUseCompatPadding 0x7f010004
+int attr contentPadding 0x7f010006
+int attr contentPaddingBottom 0x7f01000a
+int attr contentPaddingLeft 0x7f010007
+int attr contentPaddingRight 0x7f010008
+int attr contentPaddingTop 0x7f010009
+int color cardview_dark_background 0x7f020000
+int color cardview_light_background 0x7f020001
+int color cardview_shadow_end_color 0x7f020002
+int color cardview_shadow_start_color 0x7f020003
+int dimen cardview_compat_inset_shadow 0x7f030000
+int dimen cardview_default_elevation 0x7f030001
+int dimen cardview_default_radius 0x7f030002
+int style CardView 0x7f040000
+int style CardView_Dark 0x7f040001
+int style CardView_Light 0x7f040002
+int[] styleable CardView { 0x7f010000, 0x7f010001, 0x7f010002, 0x7f010003, 0x7f010004, 0x7f010005, 0x7f010006, 0x7f010007, 0x7f010008, 0x7f010009, 0x7f01000a }
+int styleable CardView_cardBackgroundColor 0
+int styleable CardView_cardCornerRadius 1
+int styleable CardView_cardElevation 2
+int styleable CardView_cardMaxElevation 3
+int styleable CardView_cardPreventCornerOverlap 5
+int styleable CardView_cardUseCompatPadding 4
+int styleable CardView_contentPadding 6
+int styleable CardView_contentPaddingBottom 10
+int styleable CardView_contentPaddingLeft 7
+int styleable CardView_contentPaddingRight 8
+int styleable CardView_contentPaddingTop 9
Index: Application/src/main/res/layout/tablelayout.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Application/src/main/res/layout/tablelayout.xml	(revision )
+++ Application/src/main/res/layout/tablelayout.xml	(revision )
@@ -0,0 +1,27 @@
+<?xml version="1.0" encoding="utf-8"?>
+<TableLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="fill_parent" android:layout_height="fill_parent"
+    >
+    <TableRow
+        android:orientation="vertical"
+        android:layout_height="wrap_content"
+        android:layout_width="wrap_content"
+        android:padding="4dp">
+        <TextView
+            android:id="@+id/scan_title"
+            android:text="@string/e_control_text"/>
+        <ImageButton
+            android:layout_height="wrap_content"
+            android:layout_width="wrap_content"
+            android:id="@+id/lauchscan"
+            android:layout_gravity="top"
+            android:maxHeight="100dp"
+            android:maxWidth="100dp"
+            android:src="@drawable/ic_scan_launcher"
+            />
+    </TableRow>
+    <TableRow>
+
+    </TableRow>
+
+</TableLayout>
\ No newline at end of file
Index: Application/src/main/java/com/example/android/networkconnect/SimpleTextFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Application/src/main/java/com/example/android/networkconnect/SimpleTextFragment.java	(revision )
+++ Application/src/main/java/com/example/android/networkconnect/SimpleTextFragment.java	(revision )
@@ -0,0 +1,102 @@
+/*
+ * Copyright 2013 The Android Open Source Project
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package com.example.android.networkconnect;
+
+import android.os.Bundle;
+import android.support.v4.app.Fragment;
+import android.util.Log;
+import android.view.Gravity;
+import android.view.LayoutInflater;
+import android.view.View;
+import android.view.ViewGroup;
+import android.widget.TextView;
+
+/**
+ * Simple fragment containing only a TextView. Used by TextPagerAdapter to create
+ * tutorial-style pages for apps.
+ */
+public class SimpleTextFragment extends Fragment {
+
+    // Contains the text that will be displayed by this Fragment
+    String mText;
+
+    // Contains a resource ID for the text that will be displayed by this fragment.
+    int mTextId = -1;
+
+    // Keys which will be used to store/retrieve text passed in via setArguments.
+    public static final String TEXT_KEY = "text";
+    public static final String TEXT_ID_KEY = "text_id";
+
+    // For situations where the app wants to modify text at Runtime, exposing the TextView.
+    private TextView mTextView;
+
+    public SimpleTextFragment() {
+    }
+
+    @Override
+    public View onCreateView(LayoutInflater inflater, ViewGroup container,
+            Bundle savedInstanceState) {
+        // Before initializing the textView, check if any arguments were provided via setArguments.
+        processArguments();
+    View layout = inflater.inflate(R.layout.sample_main, container, false);
+
+        //final ImageButton mImageButton= (ImageButton) layout.findViewById(R.id.lauchscan);
+
+        // Create a new TextView and set its text to whatever was provided.
+
+       // mTextView = new TextView(getActivity());
+        //mTextView.setGravity(Gravity.CENTER);
+
+        if (mText != null) {
+            mTextView.setText(mText);
+            Log.i("SimpleTextFragment", mText);
+        }
+        return layout;
+    }
+
+    public TextView getTextView() {
+        return mTextView;
+    }
+
+    /**
+     * Changes the text for this TextView, according to the resource ID provided.
+     * @param stringId A resource ID representing the text content for this Fragment's TextView.
+     */
+    public void setText(int stringId) {
+        getTextView().setText(getActivity().getString(stringId));
+    }
+
+    /**
+     * Processes the arguments passed into this Fragment via setArguments method.
+     * Currently the method only looks for text or a textID, nothing else.
+     */
+    public void processArguments() {
+        // For most objects we'd handle the multiple possibilities for initialization variables
+        // as multiple constructors.  For Fragments, however, it's customary to use
+        // setArguments / getArguments.
+        if (getArguments() != null) {
+            Bundle args = getArguments();
+            if (args.containsKey(TEXT_KEY)) {
+                mText = args.getString(TEXT_KEY);
+                Log.d("Constructor", "Added Text.");
+            } else if (args.containsKey(TEXT_ID_KEY)) {
+                mTextId = args.getInt(TEXT_ID_KEY);
+                mText = getString(mTextId);
+            }
+        }
+    }
+}
\ No newline at end of file
Index: Application/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Application/build.gradle	(revision )
+++ Application/build.gradle	(revision )
@@ -0,0 +1,54 @@
+buildscript {
+    repositories {
+        jcenter()
+    }
+
+    dependencies {
+        classpath 'com.android.tools.build:gradle:1.0.0'
+    }
+}
+
+apply plugin: 'com.android.application'
+
+repositories {
+    jcenter()
+}
+
+dependencies {
+    compile 'com.android.support:support-v4:21.0.2'
+    compile 'com.android.support:gridlayout-v7:21.0.2'
+    compile 'com.android.support:cardview-v7:21.0.2'
+}
+
+// The sample build uses multiple directories to
+// keep boilerplate and common code separate from
+// the main sample code.
+List<String> dirs = [
+    'main',     // main sample code; look here for the interesting stuff.
+    'common',   // components that are reused by multiple samples
+    'template'] // boilerplate code that is generated by the sample template process
+
+android {
+    compileSdkVersion 21
+    buildToolsVersion "21.1.2"
+
+    defaultConfig {
+        minSdkVersion 17
+        targetSdkVersion 21
+    }
+
+    sourceSets {
+        main {
+            dirs.each { dir ->
+                java.srcDirs "src/${dir}/java"
+                res.srcDirs "src/${dir}/res"
+            }
+        }
+        androidTest.setRoot('tests')
+        androidTest.java.srcDirs = ['tests/src']
+
+    }
+
+}
+
+
Index: Application/build/intermediates/exploded-aar/com.android.support/cardview-v7/21.0.2/AndroidManifest.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Application/build/intermediates/exploded-aar/com.android.support/cardview-v7/21.0.2/AndroidManifest.xml	(revision )
+++ Application/build/intermediates/exploded-aar/com.android.support/cardview-v7/21.0.2/AndroidManifest.xml	(revision )
@@ -0,0 +1,17 @@
+<!-- Copyright (C) 2014 The Android Open Source Project
+
+     Licensed under the Apache License, Version 2.0 (the "License");
+     you may not use this file except in compliance with the License.
+     You may obtain a copy of the License at
+
+          http://www.apache.org/licenses/LICENSE-2.0
+
+     Unless required by applicable law or agreed to in writing, software
+     distributed under the License is distributed on an "AS IS" BASIS,
+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+     See the License for the specific language governing permissions and
+     limitations under the License.
+--><manifest xmlns:android="http://schemas.android.com/apk/res/android" package="android.support.v7.cardview">
+    <uses-sdk android:minSdkVersion="7"/>
+    <application/>
+</manifest>
Index: Application/src/main/res/values/template-styles.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Application/src/main/res/values/template-styles.xml	(revision )
+++ Application/src/main/res/values/template-styles.xml	(revision )
@@ -0,0 +1,42 @@
+<!--
+  Copyright 2013 The Android Open Source Project
+
+  Licensed under the Apache License, Version 2.0 (the "License");
+  you may not use this file except in compliance with the License.
+  You may obtain a copy of the License at
+
+      http://www.apache.org/licenses/LICENSE-2.0
+
+  Unless required by applicable law or agreed to in writing, software
+  distributed under the License is distributed on an "AS IS" BASIS,
+  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+  See the License for the specific language governing permissions and
+  limitations under the License.
+  -->
+
+<resources>
+
+    <!-- Activity themes -->
+
+    <style name="Theme.Base" parent="android:Theme.Light" />
+
+    <style name="Theme.Sample" parent="Theme.Base" />
+
+    <style name="AppTheme" parent="Theme.Sample" />
+    <!-- Widget styling -->
+
+    <style name="Widget" />
+
+    <style name="Widget.SampleMessage">
+        <item name="android:textAppearance">?android:textAppearanceMedium</item>
+        <item name="android:lineSpacingMultiplier">1.1</item>
+    </style>
+
+    <style name="Widget.SampleMessageTile">
+        <item name="android:background">@drawable/tile</item>
+        <item name="android:shadowColor">#7F000000</item>
+        <item name="android:shadowDy">-3.5</item>
+        <item name="android:shadowRadius">2</item>
+    </style>
+
+</resources>
Index: Application/build/intermediates/exploded-aar/com.android.support/support-v4/21.0.2/aidl/android/support/v4/app/INotificationSideChannel.aidl
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Application/build/intermediates/exploded-aar/com.android.support/support-v4/21.0.2/aidl/android/support/v4/app/INotificationSideChannel.aidl	(revision )
+++ Application/build/intermediates/exploded-aar/com.android.support/support-v4/21.0.2/aidl/android/support/v4/app/INotificationSideChannel.aidl	(revision )
@@ -0,0 +1,42 @@
+/*
+ * Copyright (C) 2014 The Android Open Source Project
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package android.support.v4.app;
+
+import android.app.Notification;
+
+/**
+ * Interface used for delivering notifications via a side channel that bypasses
+ * the NotificationManagerService.
+ *
+ * @hide
+ */
+oneway interface INotificationSideChannel {
+    /**
+     * Send an ambient notification to the service.
+     */
+    void notify(String packageName, int id, String tag, in Notification notification);
+
+    /**
+     * Cancel an already-notified notification.
+     */
+    void cancel(String packageName, int id, String tag);
+
+    /**
+     * Cancel all notifications for the given package.
+     */
+    void cancelAll(String packageName);
+}
Index: Application/src/main/res/values/base-strings.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Application/src/main/res/values/base-strings.xml	(revision )
+++ Application/src/main/res/values/base-strings.xml	(revision )
@@ -0,0 +1,29 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!--
+ Copyright 2013 The Android Open Source Project
+
+ Licensed under the Apache License, Version 2.0 (the "License");
+ you may not use this file except in compliance with the License.
+ You may obtain a copy of the License at
+
+     http://www.apache.org/licenses/LICENSE-2.0
+
+ Unless required by applicable law or agreed to in writing, software
+ distributed under the License is distributed on an "AS IS" BASIS,
+ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ See the License for the specific language governing permissions and
+ limitations under the License.
+-->
+<resources>
+    <string name="app_name">e-venement</string>
+    <string name="intro_message">
+        <![CDATA[
+        
+            
+            This sample demonstrates how to connect to the network and fetch raw HTML using
+            HttpURLConnection. AsyncTask is used to perform the fetch on a background thread.
+            
+        
+        ]]>
+    </string>
+</resources>
Index: Application/tests/AndroidManifest.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Application/tests/AndroidManifest.xml	(revision )
+++ Application/tests/AndroidManifest.xml	(revision )
@@ -0,0 +1,40 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--
+  Copyright (C) 2013 The Android Open Source Project
+
+  Licensed under the Apache License, Version 2.0 (the "License");
+  you may not use this file except in compliance with the License.
+  You may obtain a copy of the License at
+
+      http://www.apache.org/licenses/LICENSE-2.0
+
+  Unless required by applicable law or agreed to in writing, software
+  distributed under the License is distributed on an "AS IS" BASIS,
+  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+  See the License for the specific language governing permissions and
+  limitations under the License.
+  -->
+<!-- package name must be unique so suffix with "tests" so package loader doesn't ignore us -->
+<manifest xmlns:android="http://schemas.android.com/apk/res/android"
+          package="com.example.android.networkconnect.tests"
+          android:versionCode="1"
+          android:versionName="1.0">
+
+    <!-- Min/target SDK versions (<uses-sdk>) managed by build.gradle -->
+
+    <!-- We add an application tag here just so that we can indicate that
+         this package needs to link against the android.test library,
+         which is needed when building test cases. -->
+    <application>
+        <uses-library android:name="android.test.runner" />
+    </application>
+
+    <!--
+    Specifies the instrumentation test runner used to run the tests.
+    -->
+    <instrumentation
+            android:name="android.test.InstrumentationTestRunner"
+            android:targetPackage="com.example.android.networkconnect"
+            android:label="Tests for com.example.android.networkconnect" />
+
+</manifest>
\ No newline at end of file
Index: Application/src/main/res/layout/mainlayout.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Application/src/main/res/layout/mainlayout.xml	(revision )
+++ Application/src/main/res/layout/mainlayout.xml	(revision )
@@ -0,0 +1,31 @@
+<?xml version="1.0" encoding="utf-8"?>
+
+<!--
+  Copyright 2013 The Android Open Source Project
+
+  Licensed under the Apache License, Version 2.0 (the "License");
+  you may not use this file except in compliance with the License.
+  You may obtain a copy of the License at
+
+      http://www.apache.org/licenses/LICENSE-2.0
+
+  Unless required by applicable law or agreed to in writing, software
+  distributed under the License is distributed on an "AS IS" BASIS,
+  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+  See the License for the specific language governing permissions and
+  limitations under the License.
+  -->
+
+<LinearLayout
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:orientation="vertical"
+    android:layout_width="fill_parent"
+    android:layout_height="fill_parent">
+    <FrameLayout
+        android:id="@+id/intro_fragment"
+        android:layout_weight="1"
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        />
+</LinearLayout>
Index: Application/src/main/java/com/example/android/networkconnect/InputListener_usb.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Application/src/main/java/com/example/android/networkconnect/InputListener_usb.java	(revision )
+++ Application/src/main/java/com/example/android/networkconnect/InputListener_usb.java	(revision )
@@ -0,0 +1,26 @@
+package com.example.android.networkconnect;
+
+import android.hardware.input.InputManager;
+import android.view.View;
+import android.widget.Toast;
+
+/**
+ * Created by adonniou on 21/04/15.
+ */
+public class InputListener_usb implements InputManager.InputDeviceListener {
+    @Override
+    public void onInputDeviceAdded(int deviceId) {
+        //Toast.makeText( "Oninputadd: " + deviceId, Toast.LENGTH_SHORT).show();
+        //Toast.makeText(this., "Oninputadd: "+ deviceId, Toast.LENGTH_SHORT).show();
+    }
+
+    @Override
+    public void onInputDeviceRemoved(int deviceId) {
+
+    }
+
+    @Override
+    public void onInputDeviceChanged(int deviceId) {
+
+    }
+}
Index: Application/src/main/java/com/example/android/common/logger/LogFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Application/src/main/java/com/example/android/common/logger/LogFragment.java	(revision )
+++ Application/src/main/java/com/example/android/common/logger/LogFragment.java	(revision )
@@ -0,0 +1,109 @@
+/*
+* Copyright 2013 The Android Open Source Project
+*
+* Licensed under the Apache License, Version 2.0 (the "License");
+* you may not use this file except in compliance with the License.
+* You may obtain a copy of the License at
+*
+*     http://www.apache.org/licenses/LICENSE-2.0
+*
+* Unless required by applicable law or agreed to in writing, software
+* distributed under the License is distributed on an "AS IS" BASIS,
+* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+* See the License for the specific language governing permissions and
+* limitations under the License.
+*/
+/*
+ * Copyright 2013 The Android Open Source Project
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package com.example.android.common.logger;
+
+import android.graphics.Typeface;
+import android.os.Bundle;
+import android.support.v4.app.Fragment;
+import android.text.Editable;
+import android.text.TextWatcher;
+import android.view.Gravity;
+import android.view.LayoutInflater;
+import android.view.View;
+import android.view.ViewGroup;
+import android.widget.ScrollView;
+
+/**
+ * Simple fraggment which contains a LogView and uses is to output log data it receives
+ * through the LogNode interface.
+ */
+public class LogFragment extends Fragment {
+
+    private LogView mLogView;
+    private ScrollView mScrollView;
+
+    public LogFragment() {}
+
+    public View inflateViews() {
+        mScrollView = new ScrollView(getActivity());
+        ViewGroup.LayoutParams scrollParams = new ViewGroup.LayoutParams(
+                ViewGroup.LayoutParams.MATCH_PARENT,
+                ViewGroup.LayoutParams.MATCH_PARENT);
+        mScrollView.setLayoutParams(scrollParams);
+
+        mLogView = new LogView(getActivity());
+        ViewGroup.LayoutParams logParams = new ViewGroup.LayoutParams(scrollParams);
+        logParams.height = ViewGroup.LayoutParams.WRAP_CONTENT;
+        mLogView.setLayoutParams(logParams);
+        mLogView.setClickable(true);
+        mLogView.setFocusable(true);
+        mLogView.setTypeface(Typeface.MONOSPACE);
+
+        // Want to set padding as 16 dips, setPadding takes pixels.  Hooray math!
+        int paddingDips = 16;
+        double scale = getResources().getDisplayMetrics().density;
+        int paddingPixels = (int) ((paddingDips * (scale)) + .5);
+        mLogView.setPadding(paddingPixels, paddingPixels, paddingPixels, paddingPixels);
+        mLogView.setCompoundDrawablePadding(paddingPixels);
+
+        mLogView.setGravity(Gravity.BOTTOM);
+        mLogView.setTextAppearance(getActivity(), android.R.style.TextAppearance_Holo_Medium);
+
+        mScrollView.addView(mLogView);
+        return mScrollView;
+    }
+
+    @Override
+    public View onCreateView(LayoutInflater inflater, ViewGroup container,
+                             Bundle savedInstanceState) {
+
+        View result = inflateViews();
+
+        mLogView.addTextChangedListener(new TextWatcher() {
+            @Override
+            public void beforeTextChanged(CharSequence s, int start, int count, int after) {}
+
+            @Override
+            public void onTextChanged(CharSequence s, int start, int before, int count) {}
+
+            @Override
+            public void afterTextChanged(Editable s) {
+                mScrollView.fullScroll(ScrollView.FOCUS_DOWN);
+            }
+        });
+        return result;
+    }
+
+    public LogView getLogView() {
+        return mLogView;
+    }
+}
\ No newline at end of file
Index: Application/build/generated/source/buildConfig/test/debug/com/example/android/networkconnect/test/BuildConfig.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Application/build/generated/source/buildConfig/test/debug/com/example/android/networkconnect/test/BuildConfig.java	(revision )
+++ Application/build/generated/source/buildConfig/test/debug/com/example/android/networkconnect/test/BuildConfig.java	(revision )
@@ -0,0 +1,13 @@
+/**
+ * Automatically generated file. DO NOT MODIFY
+ */
+package com.example.android.networkconnect.test;
+
+public final class BuildConfig {
+  public static final boolean DEBUG = Boolean.parseBoolean("true");
+  public static final String APPLICATION_ID = "com.example.android.networkconnect.test";
+  public static final String BUILD_TYPE = "debug";
+  public static final String FLAVOR = "";
+  public static final int VERSION_CODE = -1;
+  public static final String VERSION_NAME = "";
+}
Index: .idea/modules.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/modules.xml	(date 1430992528000)
+++ .idea/modules.xml	(revision )
@@ -3,7 +3,7 @@
   <component name="ProjectModuleManager">
     <modules>
       <module fileurl="file://$PROJECT_DIR$/Application/Application.iml" filepath="$PROJECT_DIR$/Application/Application.iml" />
-      <module fileurl="file://$PROJECT_DIR$/NetworkConnect.iml" filepath="$PROJECT_DIR$/NetworkConnect.iml" />
+      <module fileurl="file://$PROJECT_DIR$/e-venement.iml" filepath="$PROJECT_DIR$/e-venement.iml" />
       <module fileurl="file://$PROJECT_DIR$/libjar/jackson-core-asl-1.8.5/jackson-core-asl-1.8.5.iml" filepath="$PROJECT_DIR$/libjar/jackson-core-asl-1.8.5/jackson-core-asl-1.8.5.iml" />
       <module fileurl="file://$PROJECT_DIR$/libjar/libjar.iml" filepath="$PROJECT_DIR$/libjar/libjar.iml" />
     </modules>
Index: Application/src/main/res/values/template-dimens.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Application/src/main/res/values/template-dimens.xml	(revision )
+++ Application/src/main/res/values/template-dimens.xml	(revision )
@@ -0,0 +1,32 @@
+<!--
+  Copyright 2013 The Android Open Source Project
+
+  Licensed under the Apache License, Version 2.0 (the "License");
+  you may not use this file except in compliance with the License.
+  You may obtain a copy of the License at
+
+      http://www.apache.org/licenses/LICENSE-2.0
+
+  Unless required by applicable law or agreed to in writing, software
+  distributed under the License is distributed on an "AS IS" BASIS,
+  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+  See the License for the specific language governing permissions and
+  limitations under the License.
+  -->
+
+<resources>
+
+    <!-- Define standard dimensions to comply with Holo-style grids and rhythm. -->
+
+    <dimen name="margin_tiny">4dp</dimen>
+    <dimen name="margin_small">8dp</dimen>
+    <dimen name="margin_medium">16dp</dimen>
+    <dimen name="margin_large">32dp</dimen>
+    <dimen name="margin_huge">64dp</dimen>
+
+    <!-- Semantic definitions -->
+
+    <dimen name="horizontal_page_margin">@dimen/margin_medium</dimen>
+    <dimen name="vertical_page_margin">@dimen/margin_medium</dimen>
+
+</resources>
Index: Application/src/main/java/com/example/android/networkconnect/MainActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Application/src/main/java/com/example/android/networkconnect/MainActivity.java	(revision )
+++ Application/src/main/java/com/example/android/networkconnect/MainActivity.java	(revision )
@@ -0,0 +1,956 @@
+/*
+ * Copyright 2013 The Android Open Source Project
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package com.example.android.networkconnect;
+
+import android.app.PendingIntent;
+import android.content.BroadcastReceiver;
+import android.content.Context;
+import android.content.Intent;
+import android.content.IntentFilter;
+import android.content.res.Configuration;
+import android.hardware.Sensor;
+import android.hardware.SensorEventListener;
+import android.hardware.SensorManager;
+import android.hardware.input.InputManager;
+import android.os.AsyncTask;
+import android.os.Bundle;
+import android.preference.PreferenceManager;
+import android.provider.SyncStateContract;
+import android.support.v4.app.DialogFragment;
+import android.support.v4.app.Fragment;
+import android.support.v4.app.FragmentActivity;
+import android.support.v4.app.FragmentManager;
+import android.support.v4.app.FragmentTransaction;
+import android.text.InputType;
+import android.text.Layout;
+import android.text.TextUtils;
+import android.text.method.KeyListener;
+import android.util.Base64OutputStream;
+import android.util.Log;
+import android.view.InputDevice;
+import android.view.KeyEvent;
+import android.view.Menu;
+import android.view.MenuItem;
+import android.view.View;
+import android.webkit.CookieSyncManager;
+import android.widget.Toast;
+
+import com.example.android.common.logger.LogFragment;
+import com.example.android.common.logger.LogWrapper;
+import com.example.android.common.logger.MessageOnlyLogFilter;
+
+import java.io.BufferedInputStream;
+import java.io.BufferedReader;
+import java.io.BufferedWriter;
+import java.io.File;
+import java.io.FileOutputStream;
+import java.io.FileWriter;
+import java.io.IOException;
+import java.io.InputStream;
+import java.io.InputStreamReader;
+import java.io.OutputStream;
+import java.io.OutputStreamWriter;
+import java.io.Reader;
+import java.io.StringWriter;
+import java.io.UnsupportedEncodingException;
+import java.net.CookieHandler;
+import java.net.CookieManager;
+import java.net.HttpCookie;
+import java.net.HttpURLConnection;
+import java.net.PasswordAuthentication;
+import java.net.URI;
+import java.net.URISyntaxException;
+import java.net.URL;
+import java.net.URLEncoder;
+import java.security.KeyStore;
+import java.security.KeyStoreException;
+import java.security.cert.Certificate;
+import java.security.cert.CertificateException;
+import java.security.cert.X509Certificate;
+import java.util.ArrayList;
+import java.util.Enumeration;
+import java.util.HashMap;
+import java.util.Iterator;
+import java.util.List;
+import java.util.Map;
+import java.util.Scanner;
+
+import android.hardware.usb.*;
+
+import org.apache.http.NameValuePair;
+import org.apache.http.client.CookieStore;
+import org.apache.http.client.entity.UrlEncodedFormEntity;
+import org.apache.http.client.methods.HttpPost;
+import org.apache.http.client.protocol.ClientContext;
+import org.apache.http.cookie.Cookie;
+import org.apache.http.message.BasicNameValuePair;
+import org.apache.http.protocol.BasicHttpContext;
+import org.apache.http.protocol.HttpContext;
+import org.json.JSONException;
+import org.json.JSONObject;
+
+import javax.net.ssl.HttpsURLConnection;
+import javax.net.ssl.SSLContext;
+import javax.net.ssl.SSLPeerUnverifiedException;
+import javax.net.ssl.TrustManager;
+import javax.net.ssl.TrustManagerFactory;
+import javax.net.ssl.X509TrustManager;
+
+/**
+ * Sample application demonstrating how to connect to the network and fetch raw
+ * HTML. It uses AsyncTask to do the fetch on a background thread. To establish
+ * the network connection, it uses HttpURLConnection.
+ *
+ * This sample uses the logging framework to display log output in the log
+ * fragment (LogFragment).
+ */
+
+public class MainActivity extends FragmentActivity                      {
+
+    //public static final String TAG = "Network Connect";
+    public static final UsbRequest mUsbRequest=null;
+    private static final String ACTION_USB_PERMISSION =
+            "com.android.example.USB_PERMISSION";
+    private static final String ACTION_USB_DEVICE_DETACHED =
+            "com.android.example.USB_DEVICE_DETACHED";
+    private PendingIntent mPermissionIntent;
+    // Reference to the fragment showing events, so we can clear it with a button
+    // as necessary.
+    private LogFragment mLogFragment;
+    //private DialogFragment mLoginDialog;
+    private UsbDevice mUsbDevise;
+    private  PreferenceManager mPreference;
+    private String mfragment_nom;
+    private Fragment mFragment;
+    private SimpleTextFragment msimpleTextFragment;
+    private BureauFragment mbureauFragment;
+    /* private = new LoginDialog(); */
+    private File jsonOutputFile;
+    private File jsonFile;
+
+    private static JSONObject json;
+    private static String CSRFTOKEN;
+
+    private static final String TAG = "EDroide";
+
+    //private JsonFactory jsonFactory = null;
+    //private JsonParser jp = null;
+
+    public String apitest1="http://cadorb.fr/dahouet/api/api.php?action=get&var=regate";
+
+
+    public String apidev3="https://dev3.libre-informatique.fr/tck.php/ticket/login?signin[username]=antoine?signin[password]=android2015@";
+
+    public String apidev4="https://dev3.libre-informatique.fr/default.php/login"; //+parametres Marche en POST réponse 200 ok
+
+    public String apidev7="https://dev3.libre-informatique.fr/"; //+parametres Marche en POST réponse 200 ok
+
+
+    public String apidev5="https://dev3.libre-informatique.fr/tck.php/ticket/control/action?control[id]=&control[ticket_id]=2222&control[checkpoint_id]=1&control[comment]=";
+
+    public String apidev6="https://dev3.libre-informatique.fr/tck.php/ticket/control/action";
+
+    public String cookie;
+
+    @Override
+    protected void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+//View fechview= findViewById(R.id.fetch_action);
+
+       // CookieManager cookieManager = new CookieManager();
+        CookieHandler.setDefault(new CookieManager());
+
+        View UsbBouton = findViewById(R.id.usb_item);
+
+            this.setContentView(R.layout.mainlayout);
+
+
+        mfragment_nom = getIntent().getStringExtra("fragment");
+        setupFragments();
+
+
+        showFragment(mbureauFragment);
+
+ //SensorActivity sa;
+
+        //jsonobjet
+//initialisation de la boite de dialog login
+DialogFragment mLoginDialog = new LoginDialog();
+mLoginDialog.show(getSupportFragmentManager(), "LoginDialog");
+
+
+    }
+
+
+    //private class SensorActivity {
+
+        //private final Sensor mAccelerometer;
+        //public void SensorActivity() {
+
+
+
+
+            // mAccelerometer = mSensorManager.getDefaultSensor(Sensor.TYPE_ACCELEROMETER);
+        //}
+    //}
+
+    private void setupFragments() {
+        final FragmentManager fm = getSupportFragmentManager();
+
+        this.mbureauFragment = (BureauFragment) new BureauFragment();
+        if (this.mbureauFragment == null) {
+            this.mbureauFragment = new BureauFragment();
+        }
+
+        this.msimpleTextFragment = (SimpleTextFragment) new SimpleTextFragment();
+        if (this.msimpleTextFragment == null) {
+            this.msimpleTextFragment = new SimpleTextFragment();
+        }
+
+
+    }
+
+    private void showFragment(final Fragment newfragment) {
+        if (newfragment == null)
+            return;
+
+        View currentView= getCurrentFocus();
+
+
+//currentView.destroyDrawingCache();
+//currentView.clearFocus();
+        final FragmentManager fm = getSupportFragmentManager();
+        final FragmentTransaction ft = fm.beginTransaction();
+ // We can also animate the changing of fragment
+//Fragment currentfragment=fm.findFragmentById(R.id.intro_fragment);
+//currentfragment.setUserVisibleHint(false);
+
+        ft.setCustomAnimations(android.R.anim.slide_in_left,
+                android.R.anim.slide_out_right);
+//ft.hide(fragment);
+// ft.remove(fragment);
+//ft.add(msimpleTextFragment,null);
+
+        ft.replace(R.id.intro_fragment, newfragment);
+//this.mbureauFragment;
+        ft.addToBackStack(null);
+//ft.detach(fragment);
+//Toast.makeText(getBaseContext(), "Changement de fragment commit: ", Toast.LENGTH_SHORT).show();
+//ft.remove(fragment);
+        ft.commit();
+
+    }
+
+    @Override
+    public void onBackPressed() {
+
+        Log.i("ActivityInTab", "onBackPressed");
+
+        FragmentManager manager = getSupportFragmentManager();
+        if (manager.getBackStackEntryCount() > 1) {
+            super.onBackPressed();
+        } else {
+            super.onBackPressed();
+        }
+    }
+
+    public void Scan_ticket_fragment(View v) {
+        showFragment(this.msimpleTextFragment);
+    }
+
+public void Menu (View view)
+{
+    onBackPressed();
+
+}
+    @Override
+    public boolean onCreateOptionsMenu(Menu menu) {
+
+        //fechview.setHovered(true);
+        getMenuInflater().inflate(R.menu.main, menu);
+        return true;
+    }
+
+    @Override
+    public boolean onOptionsItemSelected(MenuItem item) {
+        switch (item.getItemId()) {
+            // When the user clicks FETCH, fetch the first 500 characters of
+
+            //http://cadorb.fr/dahouet/api/api.php?action=get&var=regate
+
+
+            case R.id.bureau:
+                try {
+            showFragment(this.mbureauFragment);
+                } catch (Exception e) {
+                    Toast.makeText(getBaseContext(), "Erreur show fragment: ", Toast.LENGTH_SHORT).show();
+
+                }
+            case R.id.fetch_action:
+
+                new DownloadTask().execute(apitest1);
+       // try {
+                    //mPermissionIntent = PendingIntent.getBroadcast(this, 0, new Intent(ACTION_USB_PERMISSION), 0);
+                   // IntentFilter filter = new IntentFilter(ACTION_USB_PERMISSION);
+                 //   registerReceiver(mUsbReceiver, filter);
+               //     Toast.makeText(getBaseContext(), "mPermissionIntent: " + mPermissionIntent.toString(), Toast.LENGTH_SHORT).show();
+             //   } catch (Exception e) {
+                   // e.printStackTrace();
+                  //  Toast.makeText(getBaseContext(), "erreur Pending intent: " + e, Toast.LENGTH_SHORT).show();
+                //}
+                //InputDevice mInputDevice;
+                //try {
+                 //   InputManager mInputManager = (InputManager) getSystemService(this.INPUT_SERVICE);
+                    //HashMap <String ,InputDevice> InpMap;
+
+                  //  mInputManager.registerInputDeviceListener(new InputManager.InputDeviceListener() {
+
+                      //  @Override
+                    //    public void onInputDeviceAdded(int deviceId) {
+                            //Log.d("Input", "InputDeviceAdded: " + deviceId);
+                            //Toast.makeText(getBaseContext(), "Oninputadd: " + deviceId, Toast.LENGTH_SHORT).show();
+
+                          //identifier le device
+                            //View UsbBouton_rouge=new View();
+                       // }
+
+//                        @Override
+  //                      public void onInputDeviceRemoved(int deviceId) {
+                            //Log.d("Input", "InputDeviceRemoved: " + deviceId);
+                           // Toast.makeText(getBaseContext(), "onInputDeviceRemoved: " + deviceId, Toast.LENGTH_SHORT).show();
+    //                    }
+
+      //                  @Override
+        //                public void onInputDeviceChanged(int deviceId) {
+                          //  Log.d("Input", "InputDeviceChanged: " + deviceId);
+                        //    Toast.makeText(getBaseContext(), "InputDeviceChanged: " + deviceId, Toast.LENGTH_SHORT).show();
+          //              }
+
+            //        }, null);
+
+              //  } catch (Exception e) {
+                //    Toast.makeText(getBaseContext(), "erreur inputdev: " +e, Toast.LENGTH_SHORT).show();
+                  //  e.printStackTrace();
+                //}
+
+
+              //  try {
+
+                //    UsbManager mUsbManager = (UsbManager) getSystemService(this.USB_SERVICE);
+                  //  HashMap <String ,UsbDevice> UsbMap;
+                    //        UsbMap=mUsbManager.getDeviceList();
+
+                  //  if (UsbMap != null)
+                   // {
+                     //   Iterator<UsbDevice> deviceIterator = UsbMap.values().iterator();
+                       // while (deviceIterator.hasNext()) {
+                        //mUsbDevise = deviceIterator.next();
+                 //   Toast.makeText(getBaseContext(), "USb devise: " +mUsbDevise.getDeviceName(), Toast.LENGTH_SHORT).show(); ///dev/bus/usb/001/002
+                  //  Toast.makeText(getBaseContext(), "USb DeviceId: " +mUsbDevise.getDeviceId(), Toast.LENGTH_SHORT).show();//1002
+                  //  Toast.makeText(getBaseContext(), "USb DeviceProtocol: " +mUsbDevise.getDeviceProtocol(), Toast.LENGTH_SHORT).show();//0
+                 //   Toast.makeText(getBaseContext(), "USb InterfaceCount: " +mUsbDevise.getInterfaceCount(), Toast.LENGTH_SHORT).show();//1
+
+                   //     }
+                    //}
+                    //else
+                    //{
+                     //   Toast.makeText(getBaseContext(), "USbMap Vide: ", Toast.LENGTH_SHORT).show();
+                    //}
+               // } catch (Exception e) {
+                 //   e.printStackTrace();
+                   // Toast.makeText(getBaseContext(), "erreur Usb : " + e, Toast.LENGTH_SHORT).show();
+                //}
+
+               return true;
+            // Clear the log view fragment.
+            case R.id.usb_item:
+        //   ControlTic controltic=new ControlTic();
+
+
+
+
+                new DownloadTaskHttps().execute(apidev7);
+                return true;
+            case R.id.clear_action:
+                //Quitter le programme
+                this.finish();
+                return true;
+        }
+        return false;
+    }
+
+    private class DownloadTaskHttps extends AsyncTask<String, Void, String> {
+
+        @Override
+        protected String doInBackground(String... urls) {
+            try {
+                return https_test(urls[0]);
+                //return https_token (urls[0]);
+                //return httpstestconnect(urls[0]);r/tck.php/control
+
+                // return loadFromNetwork(urls[0]);
+            } catch (IOException e) {
+                Log.i(TAG, "Erreur connection: "+e);
+                return getString(R.string.connection_error);
+            }
+        }
+
+        /**
+         * Uses the logging framework to display the output of the fetch
+         * operation in the log fragment.
+         */
+        @Override
+        protected void onPostExecute(String result) {
+           // Log.i(TAG, result);
+            //affichage du resultat dans un toast
+
+            //try {
+          //      json= new JSONObject(result);
+            //   Log.i(TAG, "Json: "+json.length());
+            //} catch (JSONException e) {
+              //  Log.i(TAG, "Erreur Json : "+e);
+            //}
+
+
+        }
+    }
+
+    /**
+     * Implementation of AsyncTask, to fetch the data in the background away from
+     * the UI thread.
+     */
+    private class DownloadTask extends AsyncTask<String, Void, String> {
+
+        @Override
+        protected String doInBackground(String... urls) {
+            try {
+
+                return String.valueOf(httptestconnect(urls[0]));
+               // return loadFromNetwork(urls[0]);
+            } catch (IOException e) {
+                Log.i(TAG, "Erreur connection: "+e);
+                return getString(R.string.connection_error);
+            }
+        }
+
+        /**
+         * Uses the logging framework to display the output of the fetch
+         * operation in the log fragment.
+         */
+        @Override
+        protected void onPostExecute(String result) {
+            Toast.makeText(getBaseContext(), "Result: " + result, Toast.LENGTH_SHORT).show();
+
+        }
+    }
+
+    /**
+     * Initiates the fetch operation.
+     */
+    private String loadFromNetwork(String urlString) throws IOException {
+        InputStream stream = null;
+        String str = "";
+
+        try {
+            stream = downloadUrl(urlString);
+            str = readIt(stream, 500);
+        } finally {
+            if (stream != null) {
+                stream.close();
+            }
+        }
+        return str;
+    }
+
+    private int httptestconnect (String urlString) throws IOException {
+
+        URL url = new URL(urlString);
+
+
+        HttpURLConnection conn = (HttpURLConnection) url.openConnection();
+
+        conn.setReadTimeout(10000 /* milliseconds */);
+        conn.setConnectTimeout(15000 /* milliseconds */);
+        conn.setRequestMethod("GET");
+        conn.setDoInput(true);
+        conn.setRequestProperty("User-Agent", "e-venement-app/");
+        // Start the query
+        conn.connect();
+        return conn.getResponseCode();
+    }
+
+
+    private String https_test (String urlString) throws  IOException {
+
+
+
+        String token="";
+        URL url = new URL(urlString);
+
+Log.i(TAG, "Protocol: "+url.getProtocol().toString());
+
+       // if (url.getProtocol().toLowerCase().equals("https")) {
+            trustAllHosts();
+
+            HttpsURLConnection conn = (HttpsURLConnection) url.openConnection();
+
+
+
+
+            conn.setReadTimeout(20000 /* milliseconds */);
+            conn.setConnectTimeout(25000 /* milliseconds */);
+           // conn.setRequestMethod("GET");
+            conn.setDoInput(true);
+            conn.setDoOutput(true);
+
+            conn.setChunkedStreamingMode(0);
+
+            conn.setRequestProperty("User-Agent", "e-venement-app/");
+
+       // OutputStreamWriter writer = new OutputStreamWriter(conn.getOutputStream());
+        //writer.getEncoding();
+        //writer.write("&signin[username]=antoine");
+        //writer.write("&signin[password]=android2015@");
+        //writer.write("?control[id]=");
+        //writer.write("&control[ticket_id]=2222");
+        //writer.write("&control[checkpoint_id]=1");
+      //  writer.write("&control[comment]=");
+
+        List<NameValuePair> nameValuePairs = new ArrayList<NameValuePair>(); //On cr�e la liste qui contiendra tous nos param�tres
+
+        //Et on y rajoute nos param�tres
+        nameValuePairs.add(new BasicNameValuePair("signin[username]", "antoine"));
+        nameValuePairs.add(new BasicNameValuePair("signin[password]", "android2015@"));
+        //nameValuePairs.add(new BasicNameValuePair("control[id]", ""));
+        //nameValuePairs.add(new BasicNameValuePair("control[ticket_id]", "2222"));
+        //nameValuePairs.add(new BasicNameValuePair("control[checkpoint_id]", "1"));
+        //nameValuePairs.add(new BasicNameValuePair("control[comment]", ""));
+
+        OutputStream os = conn.getOutputStream();
+        BufferedWriter writer2 = new BufferedWriter(
+        new OutputStreamWriter(os, "UTF-8"));
+        writer2.write(getQuery(nameValuePairs));
+        writer2.flush();
+        //writer2.close();
+        //os.close();
+
+       // conn.setEntity(new UrlEncodedFormEntity(nameValuePairs));
+
+        //writer.write("&signin[_csrf_token]="+CSRFTOKEN);
+        //writer.flush();
+
+        conn.connect();
+
+        String headerName = null;
+
+        for (int i = 1; (headerName = conn.getHeaderFieldKey(i)) != null; i++)
+        {
+            //data=data+"Header Nme : " + headerName;
+            //data=data+conn.getHeaderField(i);
+            // Log.i (TAG,headerName);
+            Log.i (TAG,headerName+": "+conn.getHeaderField(i));
+
+        }
+
+        int responseCode = conn.getResponseCode();
+
+        if(responseCode == conn.HTTP_OK) {
+            final String COOKIES_HEADER = "Set-Cookie";
+            cookie = conn.getHeaderField(COOKIES_HEADER);
+        }
+
+        if (conn.getInputStream()!=null)
+        {
+
+           // token =getStringFromInputStream(conn.getInputStream());
+            Log.i(TAG,readIt(conn.getInputStream(),15000));
+            token=readIt(conn.getInputStream(),15000);
+            Log.i(TAG,getStringFromInputStream(conn.getInputStream()));
+            //data=readIt(conn.getInputStream(),7500);
+            //Log.i(TAG,token);
+            //token=readIt(conn.getInputStream(),7500);
+        }
+            //conn.connect();
+           // List<String> cookiesList = conn.getHeaderFields().get("Set-Cookie");
+
+
+       // }
+        //conn.disconnect();
+        return token;
+    }
+
+
+
+    private String https_token (String urlString) throws  IOException {
+
+
+
+        String token=null;
+        URL url = new URL(urlString);
+
+        if (url.getProtocol().toLowerCase().equals("https")) {
+            trustAllHosts();
+            HttpsURLConnection conn = (HttpsURLConnection) url.openConnection();
+
+
+            conn.setReadTimeout(10000 /* milliseconds */);
+            conn.setConnectTimeout(15000 /* milliseconds */);
+            conn.setRequestMethod("POST");
+            conn.setDoInput(true);
+            conn.setDoOutput(true);
+
+            conn.setChunkedStreamingMode(0);
+
+            conn.setRequestProperty("User-Agent", "e-venement-app/");
+
+            List<String> cookies1 = conn.getHeaderFields().get("Set-Cookie");
+
+            for (int g = 0; g < cookies1.size(); g++) {
+                Log.i(TAG, "Cookie_list: " + cookies1.get(g).toString());
+                Cookie cookie;
+                String[] cook = cookies1.get(g).toString().split(";");
+
+                String[] subcook = cook[0].split("=");
+                token = subcook[1];
+                Log.i(TAG, "Sub Cook: " + subcook[1]);
+
+                // subcook[1];
+            }
+        }
+        //conn.disconnect();
+        return token;
+    }
+
+    private String httpstestconnect (String urlString) throws IOException {
+        CookieManager msCookieManager = new CookieManager();
+
+        URL url = new URL(urlString);
+
+        if (url.getProtocol().toLowerCase().equals("https")) {
+            trustAllHosts();
+
+
+
+
+            HttpsURLConnection conn = (HttpsURLConnection) url.openConnection();
+
+            try {
+
+                String headerName = null;
+
+                for (int i = 1; (headerName = conn.getHeaderFieldKey(i)) != null; i++)
+                {
+                    //data=data+"Header Nme : " + headerName;
+                    //data=data+conn.getHeaderField(i);
+                    // Log.i (TAG,headerName);
+                    Log.i (TAG,headerName+": "+conn.getHeaderField(i));
+                }
+
+
+
+              //  Map<String, List<String>> headerFields = conn.getHeaderFields();
+                //List<String> cookiesHeader = headerFields.get("Set-Cookie");
+
+                //if(cookiesHeader != null)
+                //{
+                  //  for (String cookie : cookiesHeader)
+                   // {
+                     //   msCookieManager.getCookieStore().add(null,HttpCookie.parse(cookie).get(0));
+
+                    //}
+                //}
+
+
+            } catch (Exception e) {
+                Log.i(TAG, "Erreur Cookie"+e);
+            }
+
+
+            conn.setReadTimeout(10000 /* milliseconds */);
+            conn.setConnectTimeout(15000 /* milliseconds */);
+            conn.setRequestMethod("POST");
+            conn.setDoInput(true);
+            conn.setDoOutput(true);
+
+            conn.setChunkedStreamingMode(0);
+
+            conn.setRequestProperty("User-Agent", "e-venement-app/");
+
+            //if(msCookieManager.getCookieStore().getCookies().size() > 0)
+            //{
+          //        conn.setRequestProperty("Cookie",
+            //            TextUtils.join(",", msCookieManager.getCookieStore().getCookies()));
+            //}
+
+           // conn= (HttpsURLConnection) url.wait(); ;
+                    //(HttpsURLConnection) url.openConnection();
+
+
+
+
+            final String password="android2015@";
+
+
+            OutputStreamWriter writer = new OutputStreamWriter(conn.getOutputStream());
+            writer.getEncoding();
+            writer.write("&signin[username]=antoine");
+            writer.write("&signin[password]=android2015@");
+            //writer.write("&signin[_csrf_token]="+CSRFTOKEN);
+            writer.flush();
+//Log.i(TAG,"Writer: "+writer.toString());
+
+         //   conn.connect();
+
+
+
+
+
+
+String data=null;
+
+                //
+                if (conn.getInputStream()!=null)
+                {
+                    Log.i(TAG,readIt(conn.getInputStream(),2500));
+                     data=readIt(conn.getInputStream(),7500);
+                }
+
+          //  return conn.getResponseCode();
+            return data;
+        //return readIt(inputStream,1028);
+        }
+
+        else
+        {
+            return url.getProtocol();
+        }
+
+    }
+
+    private String getQuery(List<NameValuePair> params) throws UnsupportedEncodingException
+    {
+        StringBuilder result = new StringBuilder();
+        boolean first = true;
+
+        for (NameValuePair pair : params)
+        {
+            if (first)
+                first = false;
+            else
+                result.append("&");
+
+            result.append(URLEncoder.encode(pair.getName(), "UTF-8"));
+            result.append("=");
+            result.append(URLEncoder.encode(pair.getValue(), "UTF-8"));
+        }
+
+        return result.toString();
+    }
+
+    private static JSONObject convertInputStreamToJson(InputStream inputStream) throws IOException{
+
+        BufferedReader bufferedReader = new BufferedReader( new InputStreamReader(inputStream));
+        String line = "";
+        String result = "";
+
+
+
+        while((line = bufferedReader.readLine()) != null)
+            result += line;
+
+        inputStream.close();
+        JSONObject jsonobjet=null;
+
+        try {
+            jsonobjet=new JSONObject(result);
+        } catch (JSONException e) {
+            e.printStackTrace();
+        }
+
+
+
+        return jsonobjet;
+
+    }
+
+    /**
+     * Given a string representation of a URL, sets up a connection and gets
+     * an input stream.
+     *
+     * @param urlString A string representation of a URL.
+     * @return An InputStream retrieved from a successful HttpURLConnection.
+     * @throws java.io.IOException
+     */
+    private InputStream downloadUrl(String urlString) throws IOException {
+        // BEGIN_INCLUDE(get_inputstream)
+        URL url = new URL(urlString);
+        HttpURLConnection conn = (HttpURLConnection) url.openConnection();
+
+        conn.setReadTimeout(10000 /* milliseconds */);
+        conn.setConnectTimeout(15000 /* milliseconds */);
+        conn.setRequestMethod("GET");
+        conn.setDoInput(true);
+        conn.setRequestProperty("User-Agent", "e-venement-app/");
+        // Start the query
+        conn.connect();
+        InputStream stream = conn.getInputStream();
+        return stream;
+        // END_INCLUDE(get_inputstream)
+    }
+
+    /**
+     * Reads an InputStream and converts it to a String.
+     *
+     * @param stream InputStream containing HTML from targeted site.
+     * @param len    Length of string that this method returns.
+     * @return String concatenated according to len parameter.
+     * @throws java.io.IOException
+     * @throws java.io.UnsupportedEncodingException
+     */
+    private String readIt(InputStream stream, int len) throws IOException, UnsupportedEncodingException {
+
+      //  BufferedReader r = new BufferedReader(new InputStreamReader(stream));
+        //StringBuilder total = new StringBuilder();
+        //String line;
+        //while ((line = r.readLine()) != null) {
+          //  total.append(line);
+        //}
+        //return total.toString();
+
+
+        Reader reader = null;
+        //stream.available();
+        reader = new InputStreamReader(stream, "UTF-8");
+        char[] buffer = new char[len];
+        reader.read(buffer);
+        return new String(buffer);
+    }
+
+    public static String getStringFromInputStream(InputStream stream) throws IOException
+    {
+        int n = 0;
+        char[] buffer = new char[1024 * 4];
+        InputStreamReader reader = new InputStreamReader(stream, "UTF8");
+        StringWriter writer = new StringWriter();
+        while (-1 != (n = reader.read(buffer))) writer.write(buffer, 0, n);
+        return writer.toString();
+    }
+
+
+    private static void trustAllHosts() {
+
+        X509TrustManager easyTrustManager = new X509TrustManager() {
+
+            public void checkClientTrusted(
+                    X509Certificate[] chain,
+                    String authType) throws CertificateException {
+                // Oh, I am easy!
+            }
+
+            public void checkServerTrusted(
+                    X509Certificate[] chain,
+                    String authType) throws CertificateException {
+                // Oh, I am easy!
+            }
+
+            public X509Certificate[] getAcceptedIssuers() {
+                return null;
+            }
+
+        };
+
+        // Create a trust manager that does not validate certificate chains
+        TrustManager[] trustAllCerts = new TrustManager[]{easyTrustManager};
+
+        // Install the all-trusting trust manager
+        try {
+            SSLContext sc = SSLContext.getInstance("TLS");
+
+            sc.init(null, trustAllCerts, new java.security.SecureRandom());
+
+            HttpsURLConnection.setDefaultSSLSocketFactory(sc.getSocketFactory());
+
+        } catch (Exception e) {
+            e.printStackTrace();
+        }
+    }
+
+
+
+
+    /**
+     * Creation d'un broadcastReceiver pour détecter la douchette en usb
+     */
+
+    private final BroadcastReceiver mUsbReceiver = new BroadcastReceiver() {
+
+        public void onReceive(Context context, Intent intent) {
+            String action = intent.getAction();
+
+//détection d'un appareil usb qui se connecte
+            if (ACTION_USB_PERMISSION.equals(action)) {
+                synchronized (this) {
+                    UsbDevice device = (UsbDevice) intent.getParcelableExtra(UsbManager.EXTRA_DEVICE);
+
+                    if (intent.getBooleanExtra(UsbManager.EXTRA_PERMISSION_GRANTED, false)) {
+                        if (device != null) {
+                            //call method to set up device communication
+//affichage bouton vert de présence douchette
+                        }
+                    } else {
+                        Log.d(TAG, "permission denied for device " + device);
+                    }
+                }
+                 //détection de débranchement d'un appareil usb
+                if (ACTION_USB_DEVICE_DETACHED.equals(action)) {
+                    UsbDevice deviceout = (UsbDevice) intent.getParcelableExtra(UsbManager.EXTRA_DEVICE);
+                    if (deviceout != null) {
+
+                        //affichage bouton rouge indiquant qu'il n'y a pas de douchette
+                        // call your method that cleans up and closes communication with the device
+
+                    }
+                }
+            }
+        }}
+
+        ;
+
+    /**
+     * Create a chain of targets that will receive log data
+     */
+    public void initializeLogging() {
+
+        // Using Log, front-end to the logging chain, emulates
+        // android.util.log method signatures.
+
+        // Wraps Android's native log framework
+        LogWrapper logWrapper = new LogWrapper();
+       // Log.setLogNode(logWrapper);
+
+        // A filter that strips out everything except the message text.
+        MessageOnlyLogFilter msgFilter = new MessageOnlyLogFilter();
+        logWrapper.setNext(msgFilter);
+
+        // On screen logging via a fragment with a TextView.
+        mLogFragment =
+                (LogFragment) getSupportFragmentManager().findFragmentById(R.id.log_fragment);
+        msgFilter.setNext(mLogFragment.getLogView());
+    }
+
+
+}
\ No newline at end of file
Index: Application/src/main/java/com/example/android/common/logger/MessageOnlyLogFilter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Application/src/main/java/com/example/android/common/logger/MessageOnlyLogFilter.java	(revision )
+++ Application/src/main/java/com/example/android/common/logger/MessageOnlyLogFilter.java	(revision )
@@ -0,0 +1,60 @@
+/*
+ * Copyright (C) 2013 The Android Open Source Project
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+package com.example.android.common.logger;
+
+/**
+ * Simple {@link LogNode} filter, removes everything except the message.
+ * Useful for situations like on-screen log output where you don't want a lot of metadata displayed,
+ * just easy-to-read message updates as they're happening.
+ */
+public class MessageOnlyLogFilter implements LogNode {
+
+    LogNode mNext;
+
+    /**
+     * Takes the "next" LogNode as a parameter, to simplify chaining.
+     *
+     * @param next The next LogNode in the pipeline.
+     */
+    public MessageOnlyLogFilter(LogNode next) {
+        mNext = next;
+    }
+
+    public MessageOnlyLogFilter() {
+    }
+
+    @Override
+    public void println(int priority, String tag, String msg, Throwable tr) {
+        if (mNext != null) {
+            getNext().println(Log.NONE, null, msg, null);
+        }
+    }
+
+    /**
+     * Returns the next LogNode in the chain.
+     */
+    public LogNode getNext() {
+        return mNext;
+    }
+
+    /**
+     * Sets the LogNode data will be sent to..
+     */
+    public void setNext(LogNode node) {
+        mNext = node;
+    }
+
+}
Index: Application/src/main/res/layout/sample_main.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Application/src/main/res/layout/sample_main.xml	(revision )
+++ Application/src/main/res/layout/sample_main.xml	(revision )
@@ -0,0 +1,35 @@
+<?xml version="1.0" encoding="utf-8"?>
+
+<!--
+  Copyright 2013 The Android Open Source Project
+
+  Licensed under the Apache License, Version 2.0 (the "License");
+  you may not use this file except in compliance with the License.
+  You may obtain a copy of the License at
+
+      http://www.apache.org/licenses/LICENSE-2.0
+
+  Unless required by applicable law or agreed to in writing, software
+  distributed under the License is distributed on an "AS IS" BASIS,
+  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+  See the License for the specific language governing permissions and
+  limitations under the License.
+  -->
+
+<LinearLayout
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:orientation="vertical"
+    android:layout_width="fill_parent"
+    android:layout_height="fill_parent">
+    <View
+        android:layout_width="fill_parent"
+        android:layout_height="1dp"
+        android:background="@android:color/darker_gray"/>
+    <EditText
+        android:id="@+id/code_contole"
+        android:inputType="text"
+        android:hint="Controle"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"/>
+</LinearLayout>
Index: Application/src/main/java/com/example/android/networkconnect/ControlTic.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Application/src/main/java/com/example/android/networkconnect/ControlTic.java	(revision )
+++ Application/src/main/java/com/example/android/networkconnect/ControlTic.java	(revision )
@@ -0,0 +1,321 @@
+package com.example.android.networkconnect;
+
+import android.util.Log;
+
+import org.json.JSONArray;
+import org.json.JSONException;
+import org.json.JSONObject;
+
+import java.util.Date;
+
+/**
+ * Created by adonniou on 29/04/15.
+ */
+public class ControlTic {
+
+    private static final String TAG = "EDroide_class_JSON";
+
+    JSONObject JSONOBJET;
+    JSONArray JSONARRAY_TICKETS;
+
+
+    String SUCCESS;
+    String MESSAGE;
+    String TIMESTAMP;
+
+    //  {
+    //    "success": false,
+    //      "message": "Contrôle: échec !",
+    //     "timestamp": "27/04/2015 21:52:25",
+
+    int TICKETS_ID;
+    String TICKETS_GAUGE;
+    String TICKETS_MANIFESTATION;
+    String TICKETS_MANIFESTATION_URL;
+    String TICKETS_SEAT;
+    String TICKETS_PRICE;
+    String TICKETS_VALUE;
+    String TICKETS_VALUE_TXT;
+    String TICKETS_URL;
+    String TICKETS_USERS;
+    String TICKETS_CANCEL;
+
+    //   "tickets": [
+    //{
+    //  "id": 4090,
+    //    "gauge": "Cat 1 - Parterre",
+    //  "manifestation": "Summit e-venement 2015 @ lun. 27 avr. 2015 22:00",
+    // "manifestation_url": "https://test.libre-informatique.fr/event.php/manifestation/1.html",
+    //"seat": "C60",
+//                "price": "TPLEIN",
+//                "value": "50.000",
+//                "value_txt": "50,00 €",
+//                "url": "https://test.libre-informatique.fr/tck.php/ticket/4090",
+//                "users": [
+//            "vel"
+//            ],
+//            "cancel": null
+//        }
+//        ],
+    JSONObject DETAILS;
+    JSONObject CONTROL;
+
+    String DETAILS_CONTROL_COMMENT;
+
+    JSONArray ERRORS_ARRAY;
+    String DETAILS_CONTROL_ERRORS;
+
+//        "details": {
+//        "control": {
+//            "comment": null,
+//                    "errors": [
+//            "Une erreur est survenue lors du contrôle de votre billet #4090."
+//            ]
+//        },
+
+    JSONObject CONTACTS;
+    JSONObject CONTACT;
+    //String CONTACTS;
+    int CONTACTS_ID;
+    String CONTACTS_CONTACT_NAME;
+    String CONTACTS_CONTACT_COMMENT;
+    String CONTACTS_CONTACT_URL;
+    String CONTACTS_CONTACT_FLASH;
+
+//        "contacts": {
+//            "4090": {
+//                "contact": {
+//                    "id": 766,
+//                            "name": "Dieudonné Delphine",
+//                            "comment": null,
+//                            "url": "https://test.libre-informatique.fr/rp.php/contact/766/edit",
+//                            "flash": null
+//                }
+//            }
+//        }
+//    }
+//    }
+
+
+
+    public JSONObject getJSONOBJET() {
+        return JSONOBJET;
+    }
+
+    public void setJSONOBJET(JSONObject JSONOBJET) {
+
+        this.JSONOBJET = JSONOBJET;
+
+        try {
+      this.SUCCESS=JSONOBJET.getString("success");
+      this.MESSAGE=JSONOBJET.getString("message");
+      this.TIMESTAMP=JSONOBJET.getString("timestamp");
+
+      this.JSONARRAY_TICKETS=JSONOBJET.getJSONArray("tickets");
+
+      JSONArray json_array_tic=JSONOBJET.getJSONArray("tickets");
+            this.TICKETS_ID=json_array_tic.getInt(0);
+            this.TICKETS_GAUGE=json_array_tic.getString(1);
+            this.TICKETS_MANIFESTATION=json_array_tic.getString(2);
+            this.TICKETS_MANIFESTATION_URL=json_array_tic.getString(3);
+            this.TICKETS_SEAT=json_array_tic.getString(4);
+            this.TICKETS_PRICE=json_array_tic.getString(5);
+            this.TICKETS_VALUE=json_array_tic.getString(6);
+            this.TICKETS_VALUE_TXT=json_array_tic.getString(7);
+            this.TICKETS_URL=json_array_tic.getString(8);
+            this.TICKETS_USERS=json_array_tic.getString(9);
+            this.TICKETS_CANCEL=json_array_tic.getString(10);
+
+            this.DETAILS=JSONOBJET.getJSONObject("details");
+            this.CONTROL=DETAILS.getJSONObject("control");
+
+            this.DETAILS_CONTROL_COMMENT=CONTROL.getString("comment");
+            this.ERRORS_ARRAY=CONTROL.getJSONArray("errors");
+
+            this.CONTACTS=DETAILS.getJSONObject("contacts");
+            this.CONTACTS.getJSONObject(String.valueOf(TICKETS_ID)).getJSONObject("contact");
+            this.CONTACTS_ID=CONTACT.getInt("id");
+            this.CONTACTS_CONTACT_NAME=CONTACT.getString("name");
+            this.CONTACTS_CONTACT_COMMENT=CONTACT.getString("comment");
+            this.CONTACTS_CONTACT_URL=CONTACT.getString("url");
+            this.CONTACTS_CONTACT_FLASH=CONTACT.getString("flash");
+
+            //ERRORS_ARRAY.get(0);
+
+
+        } catch (JSONException e) {
+
+            Log.i(TAG,e.toString());
+        }
+
+    }
+
+    public String getSUCCESS() {
+        return SUCCESS;
+    }
+
+    public void setSUCCESS(String SUCCESS) {
+        this.SUCCESS = SUCCESS;
+    }
+
+    public String getMESSAGE() {
+        return MESSAGE;
+    }
+
+    public void setMESSAGE(String MESSAGE) {
+        this.MESSAGE = MESSAGE;
+    }
+
+    public String getTIMESTAMP() {
+        return TIMESTAMP;
+    }
+
+    public void setTIMESTAMP(String TIMESTAMP) {
+        this.TIMESTAMP = TIMESTAMP;
+    }
+
+    public int getTICKETS_ID() {
+        return TICKETS_ID;
+    }
+
+    public void setTICKETS_ID(int TICKETS_ID) {
+        this.TICKETS_ID = TICKETS_ID;
+    }
+
+    public String getTICKETS_GAUGE() {
+        return TICKETS_GAUGE;
+    }
+
+    public void setTICKETS_GAUGE(String TICKETS_GAUGE) {
+        this.TICKETS_GAUGE = TICKETS_GAUGE;
+    }
+
+    public String getTICKETS_MANIFESTATION() {
+        return TICKETS_MANIFESTATION;
+    }
+
+    public void setTICKETS_MANIFESTATION(String TICKETS_MANIFESTATION) {
+        this.TICKETS_MANIFESTATION = TICKETS_MANIFESTATION;
+    }
+
+    public String getTICKETS_MANIFESTATION_URL() {
+        return TICKETS_MANIFESTATION_URL;
+    }
+
+    public void setTICKETS_MANIFESTATION_URL(String TICKETS_MANIFESTATION_URL) {
+        this.TICKETS_MANIFESTATION_URL = TICKETS_MANIFESTATION_URL;
+    }
+
+    public String getTICKETS_SEAT() {
+        return TICKETS_SEAT;
+    }
+
+    public void setTICKETS_SEAT(String TICKETS_SEAT) {
+        this.TICKETS_SEAT = TICKETS_SEAT;
+    }
+
+    public String getTICKETS_PRICE() {
+        return TICKETS_PRICE;
+    }
+
+    public void setTICKETS_PRICE(String TICKETS_PRICE) {
+        this.TICKETS_PRICE = TICKETS_PRICE;
+    }
+
+    public String getTICKETS_VALUE() {
+        return TICKETS_VALUE;
+    }
+
+    public void setTICKETS_VALUE(String TICKETS_VALUE) {
+        this.TICKETS_VALUE = TICKETS_VALUE;
+    }
+
+    public String getTICKETS_VALUE_TXT() {
+        return TICKETS_VALUE_TXT;
+    }
+
+    public void setTICKETS_VALUE_TXT(String TICKETS_VALUE_TXT) {
+        this.TICKETS_VALUE_TXT = TICKETS_VALUE_TXT;
+    }
+
+    public String getTICKETS_URL() {
+        return TICKETS_URL;
+    }
+
+    public void setTICKETS_URL(String TICKETS_URL) {
+        this.TICKETS_URL = TICKETS_URL;
+    }
+
+    public String getTICKETS_USERS() {
+        return TICKETS_USERS;
+    }
+
+    public void setTICKETS_USERS(String TICKETS_USERS) {
+        this.TICKETS_USERS = TICKETS_USERS;
+    }
+
+    public String getTICKETS_CANCEL() {
+        return TICKETS_CANCEL;
+    }
+
+    public void setTICKETS_CANCEL(String TICKETS_CANCEL) {
+        this.TICKETS_CANCEL = TICKETS_CANCEL;
+    }
+
+    public String getDETAILS_CONTROL_COMMENT() {
+        return DETAILS_CONTROL_COMMENT;
+    }
+
+    public void setDETAILS_CONTROL_COMMENT(String DETAILS_CONTROL_COMMENT) {
+        this.DETAILS_CONTROL_COMMENT = DETAILS_CONTROL_COMMENT;
+    }
+
+    public String getDETAILS_CONTROL_ERRORS() {
+        return DETAILS_CONTROL_ERRORS;
+    }
+
+    public void setDETAILS_CONTROL_ERRORS(String DETAILS_CONTROL_ERRORS) {
+        this.DETAILS_CONTROL_ERRORS = DETAILS_CONTROL_ERRORS;
+    }
+
+    public int getCONTACTS_ID() {
+        return CONTACTS_ID;
+    }
+
+    public void setCONTACTS_ID(int CONTACTS_ID) {
+        this.CONTACTS_ID = CONTACTS_ID;
+    }
+
+    public String getCONTACTS_CONTACT_NAME() {
+        return CONTACTS_CONTACT_NAME;
+    }
+
+    public void setCONTACTS_CONTACT_NAME(String CONTACTS_CONTACT_NAME) {
+        this.CONTACTS_CONTACT_NAME = CONTACTS_CONTACT_NAME;
+    }
+
+    public String getCONTACTS_CONTACT_COMMENT() {
+        return CONTACTS_CONTACT_COMMENT;
+    }
+
+    public void setCONTACTS_CONTACT_COMMENT(String CONTACTS_CONTACT_COMMENT) {
+        this.CONTACTS_CONTACT_COMMENT = CONTACTS_CONTACT_COMMENT;
+    }
+
+    public String getCONTACTS_CONTACT_URL() {
+        return CONTACTS_CONTACT_URL;
+    }
+
+    public void setCONTACTS_CONTACT_URL(String CONTACTS_CONTACT_URL) {
+        this.CONTACTS_CONTACT_URL = CONTACTS_CONTACT_URL;
+    }
+
+    public String getCONTACTS_CONTACT_FLASH() {
+        return CONTACTS_CONTACT_FLASH;
+    }
+
+    public void setCONTACTS_CONTACT_FLASH(String CONTACTS_CONTACT_FLASH) {
+        this.CONTACTS_CONTACT_FLASH = CONTACTS_CONTACT_FLASH;
+    }
+
+}
Index: Application/src/main/res/values-v11/template-styles.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Application/src/main/res/values-v11/template-styles.xml	(revision )
+++ Application/src/main/res/values-v11/template-styles.xml	(revision )
@@ -0,0 +1,22 @@
+<!--
+  Copyright 2013 The Android Open Source Project
+
+  Licensed under the Apache License, Version 2.0 (the "License");
+  you may not use this file except in compliance with the License.
+  You may obtain a copy of the License at
+
+      http://www.apache.org/licenses/LICENSE-2.0
+
+  Unless required by applicable law or agreed to in writing, software
+  distributed under the License is distributed on an "AS IS" BASIS,
+  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+  See the License for the specific language governing permissions and
+  limitations under the License.
+  -->
+
+<resources>
+
+    <!-- Activity themes -->
+    <style name="Theme.Base" parent="android:Theme.Holo.Light" />
+
+</resources>
Index: Application/tests/src/com/example/android/networkconnect/tests/SampleTests.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Application/tests/src/com/example/android/networkconnect/tests/SampleTests.java	(revision )
+++ Application/tests/src/com/example/android/networkconnect/tests/SampleTests.java	(revision )
@@ -0,0 +1,57 @@
+/*
+* Copyright (C) 2013 The Android Open Source Project
+*
+* Licensed under the Apache License, Version 2.0 (the "License");
+* you may not use this file except in compliance with the License.
+* You may obtain a copy of the License at
+*
+*      http://www.apache.org/licenses/LICENSE-2.0
+*
+* Unless required by applicable law or agreed to in writing, software
+* distributed under the License is distributed on an "AS IS" BASIS,
+* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+* See the License for the specific language governing permissions and
+* limitations under the License.
+*/
+package com.example.android.networkconnect.tests;
+
+import com.example.android.networkconnect.*;
+
+import android.test.ActivityInstrumentationTestCase2;
+
+/**
+* Tests for NetworkConnect sample.
+*/
+public class SampleTests extends ActivityInstrumentationTestCase2<MainActivity> {
+
+    private MainActivity mTestActivity;
+
+    public SampleTests() {
+        super(MainActivity.class);
+    }
+
+    @Override
+    protected void setUp() throws Exception {
+        super.setUp();
+
+        // Starts the activity under test using the default Intent with:
+        // action = {@link Intent#ACTION_MAIN}
+        // flags = {@link Intent#FLAG_ACTIVITY_NEW_TASK}
+        // All other fields are null or empty.
+        mTestActivity = getActivity();
+    }
+
+    /**
+    * Test if the test fixture has been set up correctly.
+    */
+    public void testPreconditions() {
+        //Try to add a message to add context to your assertions. These messages will be shown if
+        //a tests fails and make it easy to understand why a test failed
+        assertNotNull("mTestActivity is null", mTestActivity);
+    }
+
+    /**
+    * Add more tests below.
+    */
+
+}
Index: Application/build/generated/source/r/debug/com/example/android/networkconnect/R.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Application/build/generated/source/r/debug/com/example/android/networkconnect/R.java	(revision )
+++ Application/build/generated/source/r/debug/com/example/android/networkconnect/R.java	(revision )
@@ -0,0 +1,884 @@
+/* AUTO-GENERATED FILE.  DO NOT MODIFY.
+ *
+ * This class was automatically generated by the
+ * aapt tool from the resource data it found.  It
+ * should not be modified by hand.
+ */
+
+package com.example.android.networkconnect;
+
+public final class R {
+    public static final class attr {
+        /** <p>Must be one of the following constant values.</p>
+<table>
+<colgroup align="left" />
+<colgroup align="left" />
+<colgroup align="left" />
+<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
+<tr><td><code>alignBounds</code></td><td>0</td><td></td></tr>
+<tr><td><code>alignMargins</code></td><td>1</td><td></td></tr>
+</table>
+         */
+        public static final int alignmentMode=0x7f01000f;
+        /** <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
+"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
+<p>This may also be a reference to a resource (in the form
+"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
+theme attribute (in the form
+"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
+containing a value of this type.
+         */
+        public static final int cardBackgroundColor=0x7f010000;
+        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
+Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
+in (inches), mm (millimeters).
+<p>This may also be a reference to a resource (in the form
+"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
+theme attribute (in the form
+"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
+containing a value of this type.
+         */
+        public static final int cardCornerRadius=0x7f010001;
+        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
+Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
+in (inches), mm (millimeters).
+<p>This may also be a reference to a resource (in the form
+"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
+theme attribute (in the form
+"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
+containing a value of this type.
+         */
+        public static final int cardElevation=0x7f010002;
+        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
+Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
+in (inches), mm (millimeters).
+<p>This may also be a reference to a resource (in the form
+"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
+theme attribute (in the form
+"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
+containing a value of this type.
+         */
+        public static final int cardMaxElevation=0x7f010003;
+        /** <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
+<p>This may also be a reference to a resource (in the form
+"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
+theme attribute (in the form
+"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
+containing a value of this type.
+         */
+        public static final int cardPreventCornerOverlap=0x7f010005;
+        /** <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
+<p>This may also be a reference to a resource (in the form
+"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
+theme attribute (in the form
+"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
+containing a value of this type.
+         */
+        public static final int cardUseCompatPadding=0x7f010004;
+        /** <p>Must be an integer value, such as "<code>100</code>".
+<p>This may also be a reference to a resource (in the form
+"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
+theme attribute (in the form
+"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
+containing a value of this type.
+         */
+        public static final int columnCount=0x7f01000d;
+        /** <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
+<p>This may also be a reference to a resource (in the form
+"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
+theme attribute (in the form
+"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
+containing a value of this type.
+         */
+        public static final int columnOrderPreserved=0x7f010011;
+        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
+Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
+in (inches), mm (millimeters).
+<p>This may also be a reference to a resource (in the form
+"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
+theme attribute (in the form
+"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
+containing a value of this type.
+         */
+        public static final int contentPadding=0x7f010006;
+        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
+Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
+in (inches), mm (millimeters).
+<p>This may also be a reference to a resource (in the form
+"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
+theme attribute (in the form
+"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
+containing a value of this type.
+         */
+        public static final int contentPaddingBottom=0x7f01000a;
+        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
+Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
+in (inches), mm (millimeters).
+<p>This may also be a reference to a resource (in the form
+"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
+theme attribute (in the form
+"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
+containing a value of this type.
+         */
+        public static final int contentPaddingLeft=0x7f010007;
+        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
+Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
+in (inches), mm (millimeters).
+<p>This may also be a reference to a resource (in the form
+"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
+theme attribute (in the form
+"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
+containing a value of this type.
+         */
+        public static final int contentPaddingRight=0x7f010008;
+        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
+Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
+in (inches), mm (millimeters).
+<p>This may also be a reference to a resource (in the form
+"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
+theme attribute (in the form
+"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
+containing a value of this type.
+         */
+        public static final int contentPaddingTop=0x7f010009;
+        /** <p>Must be an integer value, such as "<code>100</code>".
+<p>This may also be a reference to a resource (in the form
+"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
+theme attribute (in the form
+"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
+containing a value of this type.
+         */
+        public static final int layout_column=0x7f010015;
+        /** <p>Must be an integer value, such as "<code>100</code>".
+<p>This may also be a reference to a resource (in the form
+"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
+theme attribute (in the form
+"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
+containing a value of this type.
+         */
+        public static final int layout_columnSpan=0x7f010016;
+        /** <p>Must be a floating point value, such as "<code>1.2</code>".
+<p>This may also be a reference to a resource (in the form
+"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
+theme attribute (in the form
+"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
+containing a value of this type.
+         */
+        public static final int layout_columnWeight=0x7f010017;
+        /** <p>Must be one or more (separated by '|') of the following constant values.</p>
+<table>
+<colgroup align="left" />
+<colgroup align="left" />
+<colgroup align="left" />
+<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
+<tr><td><code>top</code></td><td>0x30</td><td></td></tr>
+<tr><td><code>bottom</code></td><td>0x50</td><td></td></tr>
+<tr><td><code>left</code></td><td>0x03</td><td></td></tr>
+<tr><td><code>right</code></td><td>0x05</td><td></td></tr>
+<tr><td><code>center_vertical</code></td><td>0x10</td><td></td></tr>
+<tr><td><code>fill_vertical</code></td><td>0x70</td><td></td></tr>
+<tr><td><code>center_horizontal</code></td><td>0x01</td><td></td></tr>
+<tr><td><code>fill_horizontal</code></td><td>0x07</td><td></td></tr>
+<tr><td><code>center</code></td><td>0x11</td><td></td></tr>
+<tr><td><code>fill</code></td><td>0x77</td><td></td></tr>
+<tr><td><code>clip_vertical</code></td><td>0x80</td><td></td></tr>
+<tr><td><code>clip_horizontal</code></td><td>0x08</td><td></td></tr>
+<tr><td><code>start</code></td><td>0x00800003</td><td></td></tr>
+<tr><td><code>end</code></td><td>0x00800005</td><td></td></tr>
+</table>
+         */
+        public static final int layout_gravity=0x7f010018;
+        /** <p>Must be an integer value, such as "<code>100</code>".
+<p>This may also be a reference to a resource (in the form
+"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
+theme attribute (in the form
+"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
+containing a value of this type.
+         */
+        public static final int layout_row=0x7f010012;
+        /** <p>Must be an integer value, such as "<code>100</code>".
+<p>This may also be a reference to a resource (in the form
+"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
+theme attribute (in the form
+"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
+containing a value of this type.
+         */
+        public static final int layout_rowSpan=0x7f010013;
+        /** <p>Must be a floating point value, such as "<code>1.2</code>".
+<p>This may also be a reference to a resource (in the form
+"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
+theme attribute (in the form
+"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
+containing a value of this type.
+         */
+        public static final int layout_rowWeight=0x7f010014;
+        /** <p>Must be one of the following constant values.</p>
+<table>
+<colgroup align="left" />
+<colgroup align="left" />
+<colgroup align="left" />
+<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
+<tr><td><code>horizontal</code></td><td>0</td><td></td></tr>
+<tr><td><code>vertical</code></td><td>1</td><td></td></tr>
+</table>
+         */
+        public static final int orientation=0x7f01000b;
+        /** <p>Must be an integer value, such as "<code>100</code>".
+<p>This may also be a reference to a resource (in the form
+"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
+theme attribute (in the form
+"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
+containing a value of this type.
+         */
+        public static final int rowCount=0x7f01000c;
+        /** <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
+<p>This may also be a reference to a resource (in the form
+"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
+theme attribute (in the form
+"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
+containing a value of this type.
+         */
+        public static final int rowOrderPreserved=0x7f010010;
+        /** <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
+<p>This may also be a reference to a resource (in the form
+"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
+theme attribute (in the form
+"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
+containing a value of this type.
+         */
+        public static final int useDefaultMargins=0x7f01000e;
+    }
+    public static final class color {
+        public static final int cardview_dark_background=0x7f040000;
+        public static final int cardview_light_background=0x7f040001;
+        public static final int cardview_shadow_end_color=0x7f040002;
+        public static final int cardview_shadow_start_color=0x7f040003;
+    }
+    public static final class dimen {
+        public static final int cardview_compat_inset_shadow=0x7f050000;
+        public static final int cardview_default_elevation=0x7f050001;
+        public static final int cardview_default_radius=0x7f050002;
+        public static final int default_gap=0x7f050003;
+        public static final int horizontal_page_margin=0x7f050004;
+        public static final int margin_huge=0x7f050005;
+        public static final int margin_large=0x7f050006;
+        public static final int margin_medium=0x7f050007;
+        public static final int margin_small=0x7f050008;
+        public static final int margin_tiny=0x7f050009;
+        public static final int vertical_page_margin=0x7f05000a;
+    }
+    public static final class drawable {
+        public static final int ic_action_device_usb=0x7f020000;
+        public static final int ic_action_device_usb_rouge=0x7f020001;
+        public static final int ic_action_device_usb_vert=0x7f020002;
+        public static final int ic_action_navigation_menu=0x7f020003;
+        public static final int ic_launcher=0x7f020004;
+        public static final int ic_launcher_evenement=0x7f020005;
+        public static final int ic_scan_launcher=0x7f020006;
+        public static final int tile=0x7f020007;
+    }
+    public static final class id {
+        public static final int alignBounds=0x7f090002;
+        public static final int alignMargins=0x7f090003;
+        public static final int bottom=0x7f090004;
+        public static final int bureau=0x7f09001e;
+        public static final int center=0x7f090005;
+        public static final int center_horizontal=0x7f090006;
+        public static final int center_vertical=0x7f090007;
+        public static final int clear_action=0x7f09001c;
+        public static final int clip_horizontal=0x7f090008;
+        public static final int clip_vertical=0x7f090009;
+        public static final int code_contole=0x7f090019;
+        public static final int end=0x7f09000a;
+        public static final int fetch_action=0x7f09001b;
+        public static final int fill=0x7f09000b;
+        public static final int fill_horizontal=0x7f09000c;
+        public static final int fill_vertical=0x7f09000d;
+        public static final int horizontal=0x7f090000;
+        public static final int hote=0x7f090014;
+        public static final int intro_fragment=0x7f090018;
+        public static final int lauchscan=0x7f090013;
+        public static final int left=0x7f09000e;
+        public static final int log_fragment=0x7f09001a;
+        public static final int password=0x7f090016;
+        public static final int right=0x7f09000f;
+        public static final int save_log=0x7f090017;
+        public static final int scan_title=0x7f090012;
+        public static final int start=0x7f090010;
+        public static final int top=0x7f090011;
+        public static final int usb_item=0x7f09001d;
+        public static final int username=0x7f090015;
+        public static final int vertical=0x7f090001;
+    }
+    public static final class layout {
+        public static final int bureaulayout=0x7f030000;
+        public static final int login_dialog=0x7f030001;
+        public static final int mainlayout=0x7f030002;
+        public static final int sample_main=0x7f030003;
+        public static final int scanlayout=0x7f030004;
+        public static final int tablelayout=0x7f030005;
+    }
+    public static final class menu {
+        public static final int main=0x7f080000;
+    }
+    public static final class string {
+        public static final int Annuler=0x7f060000;
+        public static final int app_name=0x7f060001;
+        public static final int clear_text=0x7f060002;
+        public static final int connection_error=0x7f060003;
+        public static final int e_control_text=0x7f060004;
+        public static final int eve_android_text=0x7f060005;
+        public static final int fetch_text=0x7f060006;
+        public static final int intro_message=0x7f060007;
+        public static final int login_text=0x7f060008;
+        public static final int ok=0x7f060009;
+        public static final int sav_log=0x7f06000a;
+        public static final int welcome_message=0x7f06000b;
+    }
+    public static final class style {
+        public static final int AppTheme=0x7f070000;
+        public static final int CardView=0x7f070001;
+        public static final int CardView_Dark=0x7f070002;
+        public static final int CardView_Light=0x7f070003;
+        public static final int Theme_Base=0x7f070004;
+        public static final int Theme_Sample=0x7f070005;
+        public static final int Widget=0x7f070006;
+        public static final int Widget_SampleMessage=0x7f070007;
+        public static final int Widget_SampleMessageTile=0x7f070008;
+    }
+    public static final class styleable {
+        /** Attributes that can be used with a CardView.
+           <p>Includes the following attributes:</p>
+           <table>
+           <colgroup align="left" />
+           <colgroup align="left" />
+           <tr><th>Attribute</th><th>Description</th></tr>
+           <tr><td><code>{@link #CardView_cardBackgroundColor com.example.android.networkconnect:cardBackgroundColor}</code></td><td></td></tr>
+           <tr><td><code>{@link #CardView_cardCornerRadius com.example.android.networkconnect:cardCornerRadius}</code></td><td></td></tr>
+           <tr><td><code>{@link #CardView_cardElevation com.example.android.networkconnect:cardElevation}</code></td><td></td></tr>
+           <tr><td><code>{@link #CardView_cardMaxElevation com.example.android.networkconnect:cardMaxElevation}</code></td><td></td></tr>
+           <tr><td><code>{@link #CardView_cardPreventCornerOverlap com.example.android.networkconnect:cardPreventCornerOverlap}</code></td><td></td></tr>
+           <tr><td><code>{@link #CardView_cardUseCompatPadding com.example.android.networkconnect:cardUseCompatPadding}</code></td><td></td></tr>
+           <tr><td><code>{@link #CardView_contentPadding com.example.android.networkconnect:contentPadding}</code></td><td></td></tr>
+           <tr><td><code>{@link #CardView_contentPaddingBottom com.example.android.networkconnect:contentPaddingBottom}</code></td><td></td></tr>
+           <tr><td><code>{@link #CardView_contentPaddingLeft com.example.android.networkconnect:contentPaddingLeft}</code></td><td></td></tr>
+           <tr><td><code>{@link #CardView_contentPaddingRight com.example.android.networkconnect:contentPaddingRight}</code></td><td></td></tr>
+           <tr><td><code>{@link #CardView_contentPaddingTop com.example.android.networkconnect:contentPaddingTop}</code></td><td></td></tr>
+           </table>
+           @see #CardView_cardBackgroundColor
+           @see #CardView_cardCornerRadius
+           @see #CardView_cardElevation
+           @see #CardView_cardMaxElevation
+           @see #CardView_cardPreventCornerOverlap
+           @see #CardView_cardUseCompatPadding
+           @see #CardView_contentPadding
+           @see #CardView_contentPaddingBottom
+           @see #CardView_contentPaddingLeft
+           @see #CardView_contentPaddingRight
+           @see #CardView_contentPaddingTop
+         */
+        public static final int[] CardView = {
+            0x7f010000, 0x7f010001, 0x7f010002, 0x7f010003,
+            0x7f010004, 0x7f010005, 0x7f010006, 0x7f010007,
+            0x7f010008, 0x7f010009, 0x7f01000a
+        };
+        /**
+          <p>This symbol is the offset where the {@link com.example.android.networkconnect.R.attr#cardBackgroundColor}
+          attribute's value can be found in the {@link #CardView} array.
+
+
+          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
+"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
+<p>This may also be a reference to a resource (in the form
+"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
+theme attribute (in the form
+"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
+containing a value of this type.
+          @attr name com.example.android.networkconnect:cardBackgroundColor
+        */
+        public static final int CardView_cardBackgroundColor = 0;
+        /**
+          <p>This symbol is the offset where the {@link com.example.android.networkconnect.R.attr#cardCornerRadius}
+          attribute's value can be found in the {@link #CardView} array.
+
+
+          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
+Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
+in (inches), mm (millimeters).
+<p>This may also be a reference to a resource (in the form
+"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
+theme attribute (in the form
+"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
+containing a value of this type.
+          @attr name com.example.android.networkconnect:cardCornerRadius
+        */
+        public static final int CardView_cardCornerRadius = 1;
+        /**
+          <p>This symbol is the offset where the {@link com.example.android.networkconnect.R.attr#cardElevation}
+          attribute's value can be found in the {@link #CardView} array.
+
+
+          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
+Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
+in (inches), mm (millimeters).
+<p>This may also be a reference to a resource (in the form
+"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
+theme attribute (in the form
+"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
+containing a value of this type.
+          @attr name com.example.android.networkconnect:cardElevation
+        */
+        public static final int CardView_cardElevation = 2;
+        /**
+          <p>This symbol is the offset where the {@link com.example.android.networkconnect.R.attr#cardMaxElevation}
+          attribute's value can be found in the {@link #CardView} array.
+
+
+          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
+Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
+in (inches), mm (millimeters).
+<p>This may also be a reference to a resource (in the form
+"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
+theme attribute (in the form
+"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
+containing a value of this type.
+          @attr name com.example.android.networkconnect:cardMaxElevation
+        */
+        public static final int CardView_cardMaxElevation = 3;
+        /**
+          <p>This symbol is the offset where the {@link com.example.android.networkconnect.R.attr#cardPreventCornerOverlap}
+          attribute's value can be found in the {@link #CardView} array.
+
+
+          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
+<p>This may also be a reference to a resource (in the form
+"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
+theme attribute (in the form
+"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
+containing a value of this type.
+          @attr name com.example.android.networkconnect:cardPreventCornerOverlap
+        */
+        public static final int CardView_cardPreventCornerOverlap = 5;
+        /**
+          <p>This symbol is the offset where the {@link com.example.android.networkconnect.R.attr#cardUseCompatPadding}
+          attribute's value can be found in the {@link #CardView} array.
+
+
+          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
+<p>This may also be a reference to a resource (in the form
+"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
+theme attribute (in the form
+"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
+containing a value of this type.
+          @attr name com.example.android.networkconnect:cardUseCompatPadding
+        */
+        public static final int CardView_cardUseCompatPadding = 4;
+        /**
+          <p>This symbol is the offset where the {@link com.example.android.networkconnect.R.attr#contentPadding}
+          attribute's value can be found in the {@link #CardView} array.
+
+
+          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
+Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
+in (inches), mm (millimeters).
+<p>This may also be a reference to a resource (in the form
+"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
+theme attribute (in the form
+"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
+containing a value of this type.
+          @attr name com.example.android.networkconnect:contentPadding
+        */
+        public static final int CardView_contentPadding = 6;
+        /**
+          <p>This symbol is the offset where the {@link com.example.android.networkconnect.R.attr#contentPaddingBottom}
+          attribute's value can be found in the {@link #CardView} array.
+
+
+          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
+Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
+in (inches), mm (millimeters).
+<p>This may also be a reference to a resource (in the form
+"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
+theme attribute (in the form
+"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
+containing a value of this type.
+          @attr name com.example.android.networkconnect:contentPaddingBottom
+        */
+        public static final int CardView_contentPaddingBottom = 10;
+        /**
+          <p>This symbol is the offset where the {@link com.example.android.networkconnect.R.attr#contentPaddingLeft}
+          attribute's value can be found in the {@link #CardView} array.
+
+
+          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
+Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
+in (inches), mm (millimeters).
+<p>This may also be a reference to a resource (in the form
+"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
+theme attribute (in the form
+"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
+containing a value of this type.
+          @attr name com.example.android.networkconnect:contentPaddingLeft
+        */
+        public static final int CardView_contentPaddingLeft = 7;
+        /**
+          <p>This symbol is the offset where the {@link com.example.android.networkconnect.R.attr#contentPaddingRight}
+          attribute's value can be found in the {@link #CardView} array.
+
+
+          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
+Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
+in (inches), mm (millimeters).
+<p>This may also be a reference to a resource (in the form
+"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
+theme attribute (in the form
+"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
+containing a value of this type.
+          @attr name com.example.android.networkconnect:contentPaddingRight
+        */
+        public static final int CardView_contentPaddingRight = 8;
+        /**
+          <p>This symbol is the offset where the {@link com.example.android.networkconnect.R.attr#contentPaddingTop}
+          attribute's value can be found in the {@link #CardView} array.
+
+
+          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
+Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
+in (inches), mm (millimeters).
+<p>This may also be a reference to a resource (in the form
+"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
+theme attribute (in the form
+"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
+containing a value of this type.
+          @attr name com.example.android.networkconnect:contentPaddingTop
+        */
+        public static final int CardView_contentPaddingTop = 9;
+        /** Attributes that can be used with a GridLayout.
+           <p>Includes the following attributes:</p>
+           <table>
+           <colgroup align="left" />
+           <colgroup align="left" />
+           <tr><th>Attribute</th><th>Description</th></tr>
+           <tr><td><code>{@link #GridLayout_alignmentMode com.example.android.networkconnect:alignmentMode}</code></td><td></td></tr>
+           <tr><td><code>{@link #GridLayout_columnCount com.example.android.networkconnect:columnCount}</code></td><td></td></tr>
+           <tr><td><code>{@link #GridLayout_columnOrderPreserved com.example.android.networkconnect:columnOrderPreserved}</code></td><td></td></tr>
+           <tr><td><code>{@link #GridLayout_orientation com.example.android.networkconnect:orientation}</code></td><td></td></tr>
+           <tr><td><code>{@link #GridLayout_rowCount com.example.android.networkconnect:rowCount}</code></td><td></td></tr>
+           <tr><td><code>{@link #GridLayout_rowOrderPreserved com.example.android.networkconnect:rowOrderPreserved}</code></td><td></td></tr>
+           <tr><td><code>{@link #GridLayout_useDefaultMargins com.example.android.networkconnect:useDefaultMargins}</code></td><td></td></tr>
+           </table>
+           @see #GridLayout_alignmentMode
+           @see #GridLayout_columnCount
+           @see #GridLayout_columnOrderPreserved
+           @see #GridLayout_orientation
+           @see #GridLayout_rowCount
+           @see #GridLayout_rowOrderPreserved
+           @see #GridLayout_useDefaultMargins
+         */
+        public static final int[] GridLayout = {
+            0x7f01000b, 0x7f01000c, 0x7f01000d, 0x7f01000e,
+            0x7f01000f, 0x7f010010, 0x7f010011
+        };
+        /**
+          <p>This symbol is the offset where the {@link com.example.android.networkconnect.R.attr#alignmentMode}
+          attribute's value can be found in the {@link #GridLayout} array.
+
+
+          <p>Must be one of the following constant values.</p>
+<table>
+<colgroup align="left" />
+<colgroup align="left" />
+<colgroup align="left" />
+<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
+<tr><td><code>alignBounds</code></td><td>0</td><td></td></tr>
+<tr><td><code>alignMargins</code></td><td>1</td><td></td></tr>
+</table>
+          @attr name com.example.android.networkconnect:alignmentMode
+        */
+        public static final int GridLayout_alignmentMode = 4;
+        /**
+          <p>This symbol is the offset where the {@link com.example.android.networkconnect.R.attr#columnCount}
+          attribute's value can be found in the {@link #GridLayout} array.
+
+
+          <p>Must be an integer value, such as "<code>100</code>".
+<p>This may also be a reference to a resource (in the form
+"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
+theme attribute (in the form
+"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
+containing a value of this type.
+          @attr name com.example.android.networkconnect:columnCount
+        */
+        public static final int GridLayout_columnCount = 2;
+        /**
+          <p>This symbol is the offset where the {@link com.example.android.networkconnect.R.attr#columnOrderPreserved}
+          attribute's value can be found in the {@link #GridLayout} array.
+
+
+          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
+<p>This may also be a reference to a resource (in the form
+"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
+theme attribute (in the form
+"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
+containing a value of this type.
+          @attr name com.example.android.networkconnect:columnOrderPreserved
+        */
+        public static final int GridLayout_columnOrderPreserved = 6;
+        /**
+          <p>This symbol is the offset where the {@link com.example.android.networkconnect.R.attr#orientation}
+          attribute's value can be found in the {@link #GridLayout} array.
+
+
+          <p>Must be one of the following constant values.</p>
+<table>
+<colgroup align="left" />
+<colgroup align="left" />
+<colgroup align="left" />
+<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
+<tr><td><code>horizontal</code></td><td>0</td><td></td></tr>
+<tr><td><code>vertical</code></td><td>1</td><td></td></tr>
+</table>
+          @attr name com.example.android.networkconnect:orientation
+        */
+        public static final int GridLayout_orientation = 0;
+        /**
+          <p>This symbol is the offset where the {@link com.example.android.networkconnect.R.attr#rowCount}
+          attribute's value can be found in the {@link #GridLayout} array.
+
+
+          <p>Must be an integer value, such as "<code>100</code>".
+<p>This may also be a reference to a resource (in the form
+"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
+theme attribute (in the form
+"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
+containing a value of this type.
+          @attr name com.example.android.networkconnect:rowCount
+        */
+        public static final int GridLayout_rowCount = 1;
+        /**
+          <p>This symbol is the offset where the {@link com.example.android.networkconnect.R.attr#rowOrderPreserved}
+          attribute's value can be found in the {@link #GridLayout} array.
+
+
+          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
+<p>This may also be a reference to a resource (in the form
+"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
+theme attribute (in the form
+"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
+containing a value of this type.
+          @attr name com.example.android.networkconnect:rowOrderPreserved
+        */
+        public static final int GridLayout_rowOrderPreserved = 5;
+        /**
+          <p>This symbol is the offset where the {@link com.example.android.networkconnect.R.attr#useDefaultMargins}
+          attribute's value can be found in the {@link #GridLayout} array.
+
+
+          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
+<p>This may also be a reference to a resource (in the form
+"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
+theme attribute (in the form
+"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
+containing a value of this type.
+          @attr name com.example.android.networkconnect:useDefaultMargins
+        */
+        public static final int GridLayout_useDefaultMargins = 3;
+        /** Attributes that can be used with a GridLayout_Layout.
+           <p>Includes the following attributes:</p>
+           <table>
+           <colgroup align="left" />
+           <colgroup align="left" />
+           <tr><th>Attribute</th><th>Description</th></tr>
+           <tr><td><code>{@link #GridLayout_Layout_android_layout_height android:layout_height}</code></td><td></td></tr>
+           <tr><td><code>{@link #GridLayout_Layout_android_layout_margin android:layout_margin}</code></td><td></td></tr>
+           <tr><td><code>{@link #GridLayout_Layout_android_layout_marginBottom android:layout_marginBottom}</code></td><td></td></tr>
+           <tr><td><code>{@link #GridLayout_Layout_android_layout_marginLeft android:layout_marginLeft}</code></td><td></td></tr>
+           <tr><td><code>{@link #GridLayout_Layout_android_layout_marginRight android:layout_marginRight}</code></td><td></td></tr>
+           <tr><td><code>{@link #GridLayout_Layout_android_layout_marginTop android:layout_marginTop}</code></td><td></td></tr>
+           <tr><td><code>{@link #GridLayout_Layout_android_layout_width android:layout_width}</code></td><td></td></tr>
+           <tr><td><code>{@link #GridLayout_Layout_layout_column com.example.android.networkconnect:layout_column}</code></td><td></td></tr>
+           <tr><td><code>{@link #GridLayout_Layout_layout_columnSpan com.example.android.networkconnect:layout_columnSpan}</code></td><td></td></tr>
+           <tr><td><code>{@link #GridLayout_Layout_layout_columnWeight com.example.android.networkconnect:layout_columnWeight}</code></td><td></td></tr>
+           <tr><td><code>{@link #GridLayout_Layout_layout_gravity com.example.android.networkconnect:layout_gravity}</code></td><td></td></tr>
+           <tr><td><code>{@link #GridLayout_Layout_layout_row com.example.android.networkconnect:layout_row}</code></td><td></td></tr>
+           <tr><td><code>{@link #GridLayout_Layout_layout_rowSpan com.example.android.networkconnect:layout_rowSpan}</code></td><td></td></tr>
+           <tr><td><code>{@link #GridLayout_Layout_layout_rowWeight com.example.android.networkconnect:layout_rowWeight}</code></td><td></td></tr>
+           </table>
+           @see #GridLayout_Layout_android_layout_height
+           @see #GridLayout_Layout_android_layout_margin
+           @see #GridLayout_Layout_android_layout_marginBottom
+           @see #GridLayout_Layout_android_layout_marginLeft
+           @see #GridLayout_Layout_android_layout_marginRight
+           @see #GridLayout_Layout_android_layout_marginTop
+           @see #GridLayout_Layout_android_layout_width
+           @see #GridLayout_Layout_layout_column
+           @see #GridLayout_Layout_layout_columnSpan
+           @see #GridLayout_Layout_layout_columnWeight
+           @see #GridLayout_Layout_layout_gravity
+           @see #GridLayout_Layout_layout_row
+           @see #GridLayout_Layout_layout_rowSpan
+           @see #GridLayout_Layout_layout_rowWeight
+         */
+        public static final int[] GridLayout_Layout = {
+            0x010100f4, 0x010100f5, 0x010100f6, 0x010100f7,
+            0x010100f8, 0x010100f9, 0x010100fa, 0x7f010012,
+            0x7f010013, 0x7f010014, 0x7f010015, 0x7f010016,
+            0x7f010017, 0x7f010018
+        };
+        /**
+          <p>This symbol is the offset where the {@link android.R.attr#layout_height}
+          attribute's value can be found in the {@link #GridLayout_Layout} array.
+          @attr name android:layout_height
+        */
+        public static final int GridLayout_Layout_android_layout_height = 1;
+        /**
+          <p>This symbol is the offset where the {@link android.R.attr#layout_margin}
+          attribute's value can be found in the {@link #GridLayout_Layout} array.
+          @attr name android:layout_margin
+        */
+        public static final int GridLayout_Layout_android_layout_margin = 2;
+        /**
+          <p>This symbol is the offset where the {@link android.R.attr#layout_marginBottom}
+          attribute's value can be found in the {@link #GridLayout_Layout} array.
+          @attr name android:layout_marginBottom
+        */
+        public static final int GridLayout_Layout_android_layout_marginBottom = 6;
+        /**
+          <p>This symbol is the offset where the {@link android.R.attr#layout_marginLeft}
+          attribute's value can be found in the {@link #GridLayout_Layout} array.
+          @attr name android:layout_marginLeft
+        */
+        public static final int GridLayout_Layout_android_layout_marginLeft = 3;
+        /**
+          <p>This symbol is the offset where the {@link android.R.attr#layout_marginRight}
+          attribute's value can be found in the {@link #GridLayout_Layout} array.
+          @attr name android:layout_marginRight
+        */
+        public static final int GridLayout_Layout_android_layout_marginRight = 5;
+        /**
+          <p>This symbol is the offset where the {@link android.R.attr#layout_marginTop}
+          attribute's value can be found in the {@link #GridLayout_Layout} array.
+          @attr name android:layout_marginTop
+        */
+        public static final int GridLayout_Layout_android_layout_marginTop = 4;
+        /**
+          <p>This symbol is the offset where the {@link android.R.attr#layout_width}
+          attribute's value can be found in the {@link #GridLayout_Layout} array.
+          @attr name android:layout_width
+        */
+        public static final int GridLayout_Layout_android_layout_width = 0;
+        /**
+          <p>This symbol is the offset where the {@link com.example.android.networkconnect.R.attr#layout_column}
+          attribute's value can be found in the {@link #GridLayout_Layout} array.
+
+
+          <p>Must be an integer value, such as "<code>100</code>".
+<p>This may also be a reference to a resource (in the form
+"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
+theme attribute (in the form
+"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
+containing a value of this type.
+          @attr name com.example.android.networkconnect:layout_column
+        */
+        public static final int GridLayout_Layout_layout_column = 10;
+        /**
+          <p>This symbol is the offset where the {@link com.example.android.networkconnect.R.attr#layout_columnSpan}
+          attribute's value can be found in the {@link #GridLayout_Layout} array.
+
+
+          <p>Must be an integer value, such as "<code>100</code>".
+<p>This may also be a reference to a resource (in the form
+"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
+theme attribute (in the form
+"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
+containing a value of this type.
+          @attr name com.example.android.networkconnect:layout_columnSpan
+        */
+        public static final int GridLayout_Layout_layout_columnSpan = 11;
+        /**
+          <p>This symbol is the offset where the {@link com.example.android.networkconnect.R.attr#layout_columnWeight}
+          attribute's value can be found in the {@link #GridLayout_Layout} array.
+
+
+          <p>Must be a floating point value, such as "<code>1.2</code>".
+<p>This may also be a reference to a resource (in the form
+"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
+theme attribute (in the form
+"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
+containing a value of this type.
+          @attr name com.example.android.networkconnect:layout_columnWeight
+        */
+        public static final int GridLayout_Layout_layout_columnWeight = 12;
+        /**
+          <p>This symbol is the offset where the {@link com.example.android.networkconnect.R.attr#layout_gravity}
+          attribute's value can be found in the {@link #GridLayout_Layout} array.
+
+
+          <p>Must be one or more (separated by '|') of the following constant values.</p>
+<table>
+<colgroup align="left" />
+<colgroup align="left" />
+<colgroup align="left" />
+<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
+<tr><td><code>top</code></td><td>0x30</td><td></td></tr>
+<tr><td><code>bottom</code></td><td>0x50</td><td></td></tr>
+<tr><td><code>left</code></td><td>0x03</td><td></td></tr>
+<tr><td><code>right</code></td><td>0x05</td><td></td></tr>
+<tr><td><code>center_vertical</code></td><td>0x10</td><td></td></tr>
+<tr><td><code>fill_vertical</code></td><td>0x70</td><td></td></tr>
+<tr><td><code>center_horizontal</code></td><td>0x01</td><td></td></tr>
+<tr><td><code>fill_horizontal</code></td><td>0x07</td><td></td></tr>
+<tr><td><code>center</code></td><td>0x11</td><td></td></tr>
+<tr><td><code>fill</code></td><td>0x77</td><td></td></tr>
+<tr><td><code>clip_vertical</code></td><td>0x80</td><td></td></tr>
+<tr><td><code>clip_horizontal</code></td><td>0x08</td><td></td></tr>
+<tr><td><code>start</code></td><td>0x00800003</td><td></td></tr>
+<tr><td><code>end</code></td><td>0x00800005</td><td></td></tr>
+</table>
+          @attr name com.example.android.networkconnect:layout_gravity
+        */
+        public static final int GridLayout_Layout_layout_gravity = 13;
+        /**
+          <p>This symbol is the offset where the {@link com.example.android.networkconnect.R.attr#layout_row}
+          attribute's value can be found in the {@link #GridLayout_Layout} array.
+
+
+          <p>Must be an integer value, such as "<code>100</code>".
+<p>This may also be a reference to a resource (in the form
+"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
+theme attribute (in the form
+"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
+containing a value of this type.
+          @attr name com.example.android.networkconnect:layout_row
+        */
+        public static final int GridLayout_Layout_layout_row = 7;
+        /**
+          <p>This symbol is the offset where the {@link com.example.android.networkconnect.R.attr#layout_rowSpan}
+          attribute's value can be found in the {@link #GridLayout_Layout} array.
+
+
+          <p>Must be an integer value, such as "<code>100</code>".
+<p>This may also be a reference to a resource (in the form
+"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
+theme attribute (in the form
+"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
+containing a value of this type.
+          @attr name com.example.android.networkconnect:layout_rowSpan
+        */
+        public static final int GridLayout_Layout_layout_rowSpan = 8;
+        /**
+          <p>This symbol is the offset where the {@link com.example.android.networkconnect.R.attr#layout_rowWeight}
+          attribute's value can be found in the {@link #GridLayout_Layout} array.
+
+
+          <p>Must be a floating point value, such as "<code>1.2</code>".
+<p>This may also be a reference to a resource (in the form
+"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
+theme attribute (in the form
+"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
+containing a value of this type.
+          @attr name com.example.android.networkconnect:layout_rowWeight
+        */
+        public static final int GridLayout_Layout_layout_rowWeight = 9;
+    };
+}
Index: Application/build/intermediates/exploded-aar/com.android.support/gridlayout-v7/21.0.2/AndroidManifest.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Application/build/intermediates/exploded-aar/com.android.support/gridlayout-v7/21.0.2/AndroidManifest.xml	(revision )
+++ Application/build/intermediates/exploded-aar/com.android.support/gridlayout-v7/21.0.2/AndroidManifest.xml	(revision )
@@ -0,0 +1,17 @@
+<!-- Copyright (C) 2013 The Android Open Source Project
+
+     Licensed under the Apache License, Version 2.0 (the "License");
+     you may not use this file except in compliance with the License.
+     You may obtain a copy of the License at
+
+          http://www.apache.org/licenses/LICENSE-2.0
+
+     Unless required by applicable law or agreed to in writing, software
+     distributed under the License is distributed on an "AS IS" BASIS,
+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+     See the License for the specific language governing permissions and
+     limitations under the License.
+--><manifest xmlns:android="http://schemas.android.com/apk/res/android" package="android.support.v7.gridlayout">
+    <uses-sdk android:minSdkVersion="7"/>
+    <application/>
+</manifest>
Index: Application/src/main/res/layout/scanlayout.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Application/src/main/res/layout/scanlayout.xml	(revision )
+++ Application/src/main/res/layout/scanlayout.xml	(revision )
@@ -0,0 +1,27 @@
+<?xml version="1.0" encoding="utf-8"?>
+<TableLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="fill_parent" android:layout_height="fill_parent"
+    >
+    <TableRow
+        android:orientation="vertical"
+        android:layout_height="wrap_content"
+        android:layout_width="wrap_content"
+        android:padding="4dp">
+        <TextView
+            android:id="@+id/scan_title"
+            android:text="@string/eve_android_text"/>
+        <ImageButton
+            android:layout_height="wrap_content"
+            android:layout_width="wrap_content"
+            android:id="@+id/lauchscan"
+            android:layout_gravity="top"
+            android:maxHeight="100dp"
+            android:maxWidth="100dp"
+            android:src="@drawable/ic_scan_launcher"
+            />
+    </TableRow>
+    <TableRow>
+
+    </TableRow>
+
+</TableLayout>
\ No newline at end of file
Index: Application/src/main/res/layout/login_dialog.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Application/src/main/res/layout/login_dialog.xml	(revision )
+++ Application/src/main/res/layout/login_dialog.xml	(revision )
@@ -0,0 +1,42 @@
+<?xml version="1.0" encoding="utf-8"?>
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:orientation="vertical" android:layout_width="match_parent"
+    android:layout_height="match_parent">
+
+    <EditText
+        android:id="@+id/hote"
+        android:inputType="text"
+        android:hint="hote"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:layout_marginTop="16dp"
+        android:layout_marginLeft="4dp"
+        android:layout_marginRight="4dp"
+        android:layout_marginBottom="4dp"/>
+    <EditText
+        android:id="@+id/username"
+        android:inputType="text"
+        android:hint="Pseudo"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:layout_marginTop="16dp"
+        android:layout_marginLeft="4dp"
+        android:layout_marginRight="4dp"
+        android:layout_marginBottom="4dp"/>
+    <EditText
+        android:id="@+id/password"
+        android:inputType="textPassword"
+        android:hint="Mot_de_passe"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:layout_marginTop="4dp"
+        android:layout_marginLeft="4dp"
+        android:layout_marginRight="4dp"
+        android:layout_marginBottom="16dp"
+        android:fontFamily="sans-serif"/>
+    <CheckBox
+        android:id="@+id/save_log"
+        android:layout_width="fill_parent"
+        android:layout_height="fill_parent"
+        android:text="@string/sav_log" />
+</LinearLayout>
\ No newline at end of file
Index: Application/src/main/java/com/example/android/networkconnect/BureauFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Application/src/main/java/com/example/android/networkconnect/BureauFragment.java	(revision )
+++ Application/src/main/java/com/example/android/networkconnect/BureauFragment.java	(revision )
@@ -0,0 +1,222 @@
+/*
+ * Copyright 2013 The Android Open Source Project
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package com.example.android.networkconnect;
+
+import android.app.ActionBar;
+import android.app.FragmentTransaction;
+import android.content.Context;
+import android.graphics.Bitmap;
+import android.graphics.BitmapFactory;
+import android.graphics.Canvas;
+import android.graphics.ColorFilter;
+import android.graphics.drawable.Drawable;
+import android.hardware.Sensor;
+import android.hardware.SensorEvent;
+import android.hardware.SensorEventListener;
+import android.hardware.SensorManager;
+import android.os.Bundle;
+import android.support.v4.app.Fragment;
+import android.support.v4.app.FragmentActivity;
+import android.support.v4.app.FragmentManager;
+import android.support.v4.view.ViewGroupCompat;
+import android.text.Layout;
+import android.util.Log;
+import android.view.Gravity;
+import android.view.LayoutInflater;
+import android.view.View;
+import android.view.ViewGroup;
+import android.view.ViewStub;
+import android.widget.ImageButton;
+import android.widget.RelativeLayout;
+import android.widget.TextView;
+import android.widget.Toast;
+
+import java.util.List;
+
+/**
+ * Simple fragment containing only a TextView. Used by TextPagerAdapter to create
+ * tutorial-style pages for apps.
+ */
+public class BureauFragment extends Fragment implements SensorEventListener{
+
+    // Contains the text that will be displayed by this Fragment
+    String mText;
+    Drawable mDrawable;
+    // Contains a resource ID for the text that will be displayed by this fragment.
+    int mTextId = -1;
+    int mDrawableId=-1;
+    // Keys which will be used to store/retrieve text passed in via setArguments.
+    public static final String TEXT_KEY = "text";
+    public static final String TEXT_ID_KEY = "text_id";
+
+    public static final Drawable DRAWABLE_KEY=null;
+    public static final Drawable DRAWABLE_ID_KEY=null;
+    private Layout ll;
+    private FragmentActivity fa;
+    // For situations where the app wants to modify text at Runtime, exposing the TextView.
+    private TextView mTextView;
+    private static final String TAG = "Frag_bureau";
+
+    static private Sensor mAccelerometer;
+    static private Sensor mGravity;
+    static private Sensor mGyroscope;
+    static private Sensor mLinearAcceleration;
+    static private Sensor mRotationVector;
+    static private Sensor mOrientation;
+    static private Sensor mMagneticField;
+    static private Sensor mProximity;
+    static private Sensor mPressure;
+    static private Sensor mLight;
+    SensorManager mSensorManager;
+
+    float m_rotationMatrix []=new float [9];
+    float m_orientation []=new float [3];
+
+    //private ImageButton mImageButton;
+    //public ViewGroup mViewGroup=null;
+    FragmentTransaction ft;
+
+    public BureauFragment() {
+    }
+
+    @Override
+    public void onSensorChanged(SensorEvent event) {
+
+        Log.i(TAG, "Sensor name: " + event.sensor.getName());
+
+        for (int d = 0; d < event.values.length; d++) {
+            Log.i(TAG, event.sensor.getVendor()+": "+event.values[d]);
+        }
+    }
+    @Override
+    public void onAccuracyChanged(Sensor sensor, int accuracy) {
+        //Log.i (TAG, "Sensor Accuracy String: "+sensor.getStringType());
+    }
+
+    @Override
+    public void onResume() {
+        super.onResume();
+        mSensorManager.registerListener(this, mAccelerometer, SensorManager.SENSOR_DELAY_UI);
+        mSensorManager.registerListener(this, mMagneticField, SensorManager.SENSOR_DELAY_UI);
+    }
+
+    @Override
+    public void onPause() {
+        super.onPause();
+        mSensorManager.unregisterListener(this);
+    }
+
+    @Override
+    public View onCreateView(LayoutInflater inflater, ViewGroup container,
+            Bundle savedInstanceState) {
+        // Before initializing the textView, check if any arguments were provided via setArguments.
+
+     mSensorManager = (SensorManager) getActivity().getSystemService(Context.SENSOR_SERVICE);
+
+        // List of Sensors Available
+        List<Sensor> msensorList = mSensorManager.getSensorList(Sensor.TYPE_ALL);
+
+        mAccelerometer = mSensorManager.getDefaultSensor(Sensor.TYPE_ACCELEROMETER);
+        mMagneticField=mSensorManager.getDefaultSensor(Sensor.TYPE_MAGNETIC_FIELD);
+        //mGravity = mSensorManager.getDefaultSensor(Sensor.TYPE_GRAVITY);
+        //mGyroscope = mSensorManager.getDefaultSensor(Sensor.TYPE_GYROSCOPE);
+        //mLinearAcceleration = mSensorManager.getDefaultSensor(Sensor.TYPE_LINEAR_ACCELERATION);
+        //mRotationVector = mSensorManager.getDefaultSensor(Sensor.TYPE_ROTATION_VECTOR);
+        //mOrientation = mSensorManager.getDefaultSensor(Sensor.TYPE_ORIENTATION);
+
+
+
+        // float m_result[]=mSensorManager.getOrientation(m_rotationMatrix,m_orientation);
+
+        //Log.i(TAG,"azimuth: "+m_result[0]);
+        //Log.i(TAG,"pith: "+m_result[1]);
+        //Log.i(TAG,"roll_angle: "+m_result[2]);
+
+        //mMagneticField = mSensorManager.getDefaultSensor(Sensor.TYPE_MAGNETIC_FIELD);
+        //mProximity = mSensorManager.getDefaultSensor(Sensor.TYPE_PROXIMITY);
+        //mPressure = mSensorManager.getDefaultSensor(Sensor.TYPE_PRESSURE);
+        //mLight = mSensorManager.getDefaultSensor(Sensor.TYPE_LIGHT);
+
+        for (int k=0;k<msensorList.size();k++){
+            Log.i(TAG, "Sensor: "+msensorList.get(k).getName());
+        }
+        //Log.i (TAG, "Sensor CreateView String: "+mOrientation.getStringType());
+        //Log.i (TAG, "azimuth_angle: "+event.values[0]);
+        //Log.i (TAG, "pitch_angle: "+event.values[1]);
+        //Log.i (TAG, "roll_angle: "+event.values[2])
+
+        processArguments();
+fa=super.getActivity();
+
+        View layout = inflater.inflate(R.layout.bureaulayout, container, false);
+
+       // final ImageButton mImageButton= (ImageButton) layout.findViewById(R.id.lauchscan);
+
+     //   mImageButton.setOnClickListener(new View.OnClickListener() {
+           // @Override
+         //   public void onClick(View v) {
+       //         Toast toast3 = Toast.makeText(getActivity(), "click", Toast.LENGTH_LONG);
+     //           toast3.show();
+   //SimpleTextFragment bureauFragment = (SimpleTextFragment) getFragmentManager().findFragmentById(R.id.bureau_fragment);
+               // this.showFragment();
+       //   }
+     //   });
+
+        if (mText != null) {
+            mTextView.setText(mText);
+            Log.i("SimpleTextFragment", mText);
+        }
+        //return inflater.inflate(R.layout.bureaulayout,container,false);
+        //return mDrawableView;
+        return layout;
+    }
+
+
+
+    public TextView getTextView() {
+        return mTextView;
+    }
+
+    /**
+     * Changes the text for this TextView, according to the resource ID provided.
+     * @param stringId A resource ID representing the text content for this Fragment's TextView.
+     */
+    public void setText(int stringId) {
+        getTextView().setText(getActivity().getString(stringId));
+    }
+
+    /**
+     * Processes the arguments passed into this Fragment via setArguments method.
+     * Currently the method only looks for text or a textID, nothing else.
+     */
+    public void processArguments() {
+        // For most objects we'd handle the multiple possibilities for initialization variables
+        // as multiple constructors.  For Fragments, however, it's customary to use
+        // setArguments / getArguments.
+        if (getArguments() != null) {
+            Bundle args = getArguments();
+            if (args.containsKey(TEXT_KEY)) {
+                mText = args.getString(TEXT_KEY);
+                Log.d("Constructor", "Added Text.");
+            } else if (args.containsKey(TEXT_ID_KEY)) {
+                mTextId = args.getInt(TEXT_ID_KEY);
+                mText = getString(mTextId);
+            }
+        }
+    }
+
+}
\ No newline at end of file
Index: Application/src/main/res/menu/main.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Application/src/main/res/menu/main.xml	(revision )
+++ Application/src/main/res/menu/main.xml	(revision )
@@ -0,0 +1,35 @@
+<!--
+  Copyright 2013 The Android Open Source Project
+
+  Licensed under the Apache License, Version 2.0 (the "License");
+  you may not use this file except in compliance with the License.
+  You may obtain a copy of the License at
+
+      http://www.apache.org/licenses/LICENSE-2.0
+
+  Unless required by applicable law or agreed to in writing, software
+  distributed under the License is distributed on an "AS IS" BASIS,
+  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+  See the License for the specific language governing permissions and
+  limitations under the License.
+  -->
+
+<menu xmlns:android="http://schemas.android.com/apk/res/android">
+
+    <item android:id="@+id/fetch_action"
+        android:showAsAction="ifRoom|withText"
+        android:title="@string/fetch_text"
+        android:visible="true"/>
+    <item android:id="@+id/clear_action"
+        android:showAsAction="ifRoom|withText"
+        android:title="@string/clear_text" />
+    <item android:id="@+id/usb_item"
+        android:showAsAction="ifRoom"
+        android:icon="@drawable/ic_action_device_usb"
+        android:title="usb" />
+    <item android:id="@+id/bureau"
+        android:showAsAction="ifRoom"
+        android:visible="true"
+        android:icon="@drawable/ic_action_navigation_menu"
+        />
+</menu>
Index: Application/src/main/java/com/example/android/common/logger/Log.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Application/src/main/java/com/example/android/common/logger/Log.java	(revision )
+++ Application/src/main/java/com/example/android/common/logger/Log.java	(revision )
@@ -0,0 +1,236 @@
+/*
+ * Copyright (C) 2013 The Android Open Source Project
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+package com.example.android.common.logger;
+
+/**
+ * Helper class for a list (or tree) of LoggerNodes.
+ *
+ * <p>When this is set as the head of the list,
+ * an instance of it can function as a drop-in replacement for {@link android.util.Log}.
+ * Most of the methods in this class server only to map a method call in Log to its equivalent
+ * in LogNode.</p>
+ */
+public class Log {
+    // Grabbing the native values from Android's native logging facilities,
+    // to make for easy migration and interop.
+    public static final int NONE = -1;
+    public static final int VERBOSE = android.util.Log.VERBOSE;
+    public static final int DEBUG = android.util.Log.DEBUG;
+    public static final int INFO = android.util.Log.INFO;
+    public static final int WARN = android.util.Log.WARN;
+    public static final int ERROR = android.util.Log.ERROR;
+    public static final int ASSERT = android.util.Log.ASSERT;
+
+    // Stores the beginning of the LogNode topology.
+    private static LogNode mLogNode;
+
+    /**
+     * Returns the next LogNode in the linked list.
+     */
+    public static LogNode getLogNode() {
+        return mLogNode;
+    }
+
+    /**
+     * Sets the LogNode data will be sent to.
+     */
+    public static void setLogNode(LogNode node) {
+        mLogNode = node;
+    }
+
+    /**
+     * Instructs the LogNode to print the log data provided. Other LogNodes can
+     * be chained to the end of the LogNode as desired.
+     *
+     * @param priority Log level of the data being logged. Verbose, Error, etc.
+     * @param tag Tag for for the log data. Can be used to organize log statements.
+     * @param msg The actual message to be logged.
+     * @param tr If an exception was thrown, this can be sent along for the logging facilities
+     *           to extract and print useful information.
+     */
+    public static void println(int priority, String tag, String msg, Throwable tr) {
+        if (mLogNode != null) {
+            mLogNode.println(priority, tag, msg, tr);
+        }
+    }
+
+    /**
+     * Instructs the LogNode to print the log data provided. Other LogNodes can
+     * be chained to the end of the LogNode as desired.
+     *
+     * @param priority Log level of the data being logged. Verbose, Error, etc.
+     * @param tag Tag for for the log data. Can be used to organize log statements.
+     * @param msg The actual message to be logged. The actual message to be logged.
+     */
+    public static void println(int priority, String tag, String msg) {
+        println(priority, tag, msg, null);
+    }
+
+   /**
+     * Prints a message at VERBOSE priority.
+     *
+     * @param tag Tag for for the log data. Can be used to organize log statements.
+     * @param msg The actual message to be logged.
+     * @param tr If an exception was thrown, this can be sent along for the logging facilities
+     *           to extract and print useful information.
+     */
+    public static void v(String tag, String msg, Throwable tr) {
+        println(VERBOSE, tag, msg, tr);
+    }
+
+    /**
+     * Prints a message at VERBOSE priority.
+     *
+     * @param tag Tag for for the log data. Can be used to organize log statements.
+     * @param msg The actual message to be logged.
+     */
+    public static void v(String tag, String msg) {
+        v(tag, msg, null);
+    }
+
+
+    /**
+     * Prints a message at DEBUG priority.
+     *
+     * @param tag Tag for for the log data. Can be used to organize log statements.
+     * @param msg The actual message to be logged.
+     * @param tr If an exception was thrown, this can be sent along for the logging facilities
+     *           to extract and print useful information.
+     */
+    public static void d(String tag, String msg, Throwable tr) {
+        println(DEBUG, tag, msg, tr);
+    }
+
+    /**
+     * Prints a message at DEBUG priority.
+     *
+     * @param tag Tag for for the log data. Can be used to organize log statements.
+     * @param msg The actual message to be logged.
+     */
+    public static void d(String tag, String msg) {
+        d(tag, msg, null);
+    }
+
+    /**
+     * Prints a message at INFO priority.
+     *
+     * @param tag Tag for for the log data. Can be used to organize log statements.
+     * @param msg The actual message to be logged.
+     * @param tr If an exception was thrown, this can be sent along for the logging facilities
+     *           to extract and print useful information.
+     */
+    public static void i(String tag, String msg, Throwable tr) {
+        println(INFO, tag, msg, tr);
+    }
+
+    /**
+     * Prints a message at INFO priority.
+     *
+     * @param tag Tag for for the log data. Can be used to organize log statements.
+     * @param msg The actual message to be logged.
+     */
+    public static void i(String tag, String msg) {
+        i(tag, msg, null);
+    }
+
+    /**
+     * Prints a message at WARN priority.
+     *
+     * @param tag Tag for for the log data. Can be used to organize log statements.
+     * @param msg The actual message to be logged.
+     * @param tr If an exception was thrown, this can be sent along for the logging facilities
+     *           to extract and print useful information.
+     */
+    public static void w(String tag, String msg, Throwable tr) {
+        println(WARN, tag, msg, tr);
+    }
+
+    /**
+     * Prints a message at WARN priority.
+     *
+     * @param tag Tag for for the log data. Can be used to organize log statements.
+     * @param msg The actual message to be logged.
+     */
+    public static void w(String tag, String msg) {
+        w(tag, msg, null);
+    }
+
+    /**
+     * Prints a message at WARN priority.
+     *
+     * @param tag Tag for for the log data. Can be used to organize log statements.
+     * @param tr If an exception was thrown, this can be sent along for the logging facilities
+     *           to extract and print useful information.
+     */
+    public static void w(String tag, Throwable tr) {
+        w(tag, null, tr);
+    }
+
+    /**
+     * Prints a message at ERROR priority.
+     *
+     * @param tag Tag for for the log data. Can be used to organize log statements.
+     * @param msg The actual message to be logged.
+     * @param tr If an exception was thrown, this can be sent along for the logging facilities
+     *           to extract and print useful information.
+     */
+    public static void e(String tag, String msg, Throwable tr) {
+        println(ERROR, tag, msg, tr);
+    }
+
+    /**
+     * Prints a message at ERROR priority.
+     *
+     * @param tag Tag for for the log data. Can be used to organize log statements.
+     * @param msg The actual message to be logged.
+     */
+    public static void e(String tag, String msg) {
+        e(tag, msg, null);
+    }
+
+    /**
+     * Prints a message at ASSERT priority.
+     *
+     * @param tag Tag for for the log data. Can be used to organize log statements.
+     * @param msg The actual message to be logged.
+     * @param tr If an exception was thrown, this can be sent along for the logging facilities
+     *           to extract and print useful information.
+     */
+    public static void wtf(String tag, String msg, Throwable tr) {
+        println(ASSERT, tag, msg, tr);
+    }
+
+    /**
+     * Prints a message at ASSERT priority.
+     *
+     * @param tag Tag for for the log data. Can be used to organize log statements.
+     * @param msg The actual message to be logged.
+     */
+    public static void wtf(String tag, String msg) {
+        wtf(tag, msg, null);
+    }
+
+    /**
+     * Prints a message at ASSERT priority.
+     *
+     * @param tag Tag for for the log data. Can be used to organize log statements.
+     * @param tr If an exception was thrown, this can be sent along for the logging facilities
+     *           to extract and print useful information.
+     */
+    public static void wtf(String tag, Throwable tr) {
+        wtf(tag, null, tr);
+    }
+}
Index: NetworkConnect.iml
===================================================================
--- NetworkConnect.iml	(date 1430992528000)
+++ e-venement.iml	(revision )
@@ -1,0 +1,0 @@
Index: Application/build/intermediates/exploded-aar/com.android.support/cardview-v7/21.0.2/res/values/values.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Application/build/intermediates/exploded-aar/com.android.support/cardview-v7/21.0.2/res/values/values.xml	(revision )
+++ Application/build/intermediates/exploded-aar/com.android.support/cardview-v7/21.0.2/res/values/values.xml	(revision )
@@ -0,0 +1,56 @@
+<?xml version="1.0" encoding="utf-8"?>
+<resources>
+
+    <color name="cardview_dark_background">#FF202020</color>
+    <color name="cardview_light_background">#FFFAFAFA</color>
+    <color name="cardview_shadow_end_color">#03000000</color>
+    <color name="cardview_shadow_start_color">#37000000</color>
+
+    <declare-styleable name="CardView">
+
+        <!-- Background color for CardView. -->
+        <attr name="cardBackgroundColor" format="color" />
+        <!-- Corner radius for CardView. -->
+        <attr name="cardCornerRadius" format="dimension" />
+        <!-- Elevation for CardView. -->
+        <attr name="cardElevation" format="dimension" />
+        <!-- Maximum Elevation for CardView. -->
+        <attr name="cardMaxElevation" format="dimension" />
+        <!-- Add padding in API v21+ as well to have the same measurements with previous versions. -->
+        <attr name="cardUseCompatPadding" format="boolean" />
+        <!-- Add padding to CardView on v20 and before to prevent intersections between the Card content and rounded corners. -->
+        <attr name="cardPreventCornerOverlap" format="boolean" />
+        <!-- Inner padding between the edges of the Card and children of the CardView. -->
+        <attr name="contentPadding" format="dimension" />
+        <!-- Inner padding between the left edge of the Card and children of the CardView. -->
+        <attr name="contentPaddingLeft" format="dimension" />
+        <!-- Inner padding between the right edge of the Card and children of the CardView. -->
+        <attr name="contentPaddingRight" format="dimension" />
+        <!-- Inner padding between the top edge of the Card and children of the CardView. -->
+        <attr name="contentPaddingTop" format="dimension" />
+        <!-- Inner padding between the bottom edge of the Card and children of the CardView. -->
+        <attr name="contentPaddingBottom" format="dimension" />
+    </declare-styleable>
+
+    <dimen name="cardview_compat_inset_shadow">1dp</dimen>
+    <dimen name="cardview_default_elevation">2dp</dimen>
+    <dimen name="cardview_default_radius">2dp</dimen>
+
+    <style name="CardView">
+        <item name="cardBackgroundColor">@color/cardview_light_background</item>
+        <item name="cardCornerRadius">@dimen/cardview_default_radius</item>
+        <item name="cardElevation">@dimen/cardview_default_elevation</item>
+        <item name="cardMaxElevation">@dimen/cardview_default_elevation</item>
+        <item name="cardUseCompatPadding">false</item>
+        <item name="cardPreventCornerOverlap">true</item>
+    </style>
+
+    <style name="CardView.Dark">
+        <item name="cardBackgroundColor">@color/cardview_dark_background</item>
+    </style>
+
+    <style name="CardView.Light">
+        <item name="cardBackgroundColor">@color/cardview_light_background</item>
+    </style>
+
+</resources>
Index: Application/src/main/java/com/example/android/common/logger/LogNode.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Application/src/main/java/com/example/android/common/logger/LogNode.java	(revision )
+++ Application/src/main/java/com/example/android/common/logger/LogNode.java	(revision )
@@ -0,0 +1,39 @@
+/*
+ * Copyright (C) 2012 The Android Open Source Project
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+package com.example.android.common.logger;
+
+/**
+ * Basic interface for a logging system that can output to one or more targets.
+ * Note that in addition to classes that will output these logs in some format,
+ * one can also implement this interface over a filter and insert that in the chain,
+ * such that no targets further down see certain data, or see manipulated forms of the data.
+ * You could, for instance, write a "ToHtmlLoggerNode" that just converted all the log data
+ * it received to HTML and sent it along to the next node in the chain, without printing it
+ * anywhere.
+ */
+public interface LogNode {
+
+    /**
+     * Instructs first LogNode in the list to print the log data provided.
+     * @param priority Log level of the data being logged.  Verbose, Error, etc.
+     * @param tag Tag for for the log data.  Can be used to organize log statements.
+     * @param msg The actual message to be logged. The actual message to be logged.
+     * @param tr If an exception was thrown, this can be sent along for the logging facilities
+     *           to extract and print useful information.
+     */
+    public void println(int priority, String tag, String msg, Throwable tr);
+
+}
Index: Application/build/generated/source/r/debug/android/support/v7/gridlayout/R.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Application/build/generated/source/r/debug/android/support/v7/gridlayout/R.java	(revision )
+++ Application/build/generated/source/r/debug/android/support/v7/gridlayout/R.java	(revision )
@@ -0,0 +1,74 @@
+/* AUTO-GENERATED FILE.  DO NOT MODIFY.
+ *
+ * This class was automatically generated by the
+ * aapt tool from the resource data it found.  It
+ * should not be modified by hand.
+ */
+package android.support.v7.gridlayout;
+
+public final class R {
+	public static final class attr {
+		public static final int alignmentMode = 0x7f01000f;
+		public static final int columnCount = 0x7f01000d;
+		public static final int columnOrderPreserved = 0x7f010011;
+		public static final int layout_column = 0x7f010015;
+		public static final int layout_columnSpan = 0x7f010016;
+		public static final int layout_columnWeight = 0x7f010017;
+		public static final int layout_gravity = 0x7f010018;
+		public static final int layout_row = 0x7f010012;
+		public static final int layout_rowSpan = 0x7f010013;
+		public static final int layout_rowWeight = 0x7f010014;
+		public static final int orientation = 0x7f01000b;
+		public static final int rowCount = 0x7f01000c;
+		public static final int rowOrderPreserved = 0x7f010010;
+		public static final int useDefaultMargins = 0x7f01000e;
+	}
+	public static final class dimen {
+		public static final int default_gap = 0x7f050003;
+	}
+	public static final class id {
+		public static final int alignBounds = 0x7f090002;
+		public static final int alignMargins = 0x7f090003;
+		public static final int bottom = 0x7f090004;
+		public static final int center = 0x7f090005;
+		public static final int center_horizontal = 0x7f090006;
+		public static final int center_vertical = 0x7f090007;
+		public static final int clip_horizontal = 0x7f090008;
+		public static final int clip_vertical = 0x7f090009;
+		public static final int end = 0x7f09000a;
+		public static final int fill = 0x7f09000b;
+		public static final int fill_horizontal = 0x7f09000c;
+		public static final int fill_vertical = 0x7f09000d;
+		public static final int horizontal = 0x7f090000;
+		public static final int left = 0x7f09000e;
+		public static final int right = 0x7f09000f;
+		public static final int start = 0x7f090010;
+		public static final int top = 0x7f090011;
+		public static final int vertical = 0x7f090001;
+	}
+	public static final class styleable {
+		public static final int[] GridLayout = { 0x7f01000b, 0x7f01000c, 0x7f01000d, 0x7f01000e, 0x7f01000f, 0x7f010010, 0x7f010011 };
+		public static final int[] GridLayout_Layout = { 0x010100f4, 0x010100f5, 0x010100f6, 0x010100f7, 0x010100f8, 0x010100f9, 0x010100fa, 0x7f010012, 0x7f010013, 0x7f010014, 0x7f010015, 0x7f010016, 0x7f010017, 0x7f010018 };
+		public static final int GridLayout_Layout_android_layout_height = 1;
+		public static final int GridLayout_Layout_android_layout_margin = 2;
+		public static final int GridLayout_Layout_android_layout_marginBottom = 6;
+		public static final int GridLayout_Layout_android_layout_marginLeft = 3;
+		public static final int GridLayout_Layout_android_layout_marginRight = 5;
+		public static final int GridLayout_Layout_android_layout_marginTop = 4;
+		public static final int GridLayout_Layout_android_layout_width = 0;
+		public static final int GridLayout_Layout_layout_column = 10;
+		public static final int GridLayout_Layout_layout_columnSpan = 11;
+		public static final int GridLayout_Layout_layout_columnWeight = 12;
+		public static final int GridLayout_Layout_layout_gravity = 13;
+		public static final int GridLayout_Layout_layout_row = 7;
+		public static final int GridLayout_Layout_layout_rowSpan = 8;
+		public static final int GridLayout_Layout_layout_rowWeight = 9;
+		public static final int GridLayout_alignmentMode = 4;
+		public static final int GridLayout_columnCount = 2;
+		public static final int GridLayout_columnOrderPreserved = 6;
+		public static final int GridLayout_orientation = 0;
+		public static final int GridLayout_rowCount = 1;
+		public static final int GridLayout_rowOrderPreserved = 5;
+		public static final int GridLayout_useDefaultMargins = 3;
+	}
+}
Index: Application/src/main/res/values-v21/base-colors.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Application/src/main/res/values-v21/base-colors.xml	(revision )
+++ Application/src/main/res/values-v21/base-colors.xml	(revision )
@@ -0,0 +1,20 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!--
+ Copyright 2013 The Android Open Source Project
+
+ Licensed under the Apache License, Version 2.0 (the "License");
+ you may not use this file except in compliance with the License.
+ You may obtain a copy of the License at
+
+     http://www.apache.org/licenses/LICENSE-2.0
+
+ Unless required by applicable law or agreed to in writing, software
+ distributed under the License is distributed on an "AS IS" BASIS,
+ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ See the License for the specific language governing permissions and
+ limitations under the License.
+-->
+<resources>
+
+
+</resources>
Index: gradlew.bat
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- gradlew.bat	(date 1430992528000)
+++ gradlew.bat	(revision )
@@ -1,0 +1,0 @@
Index: Application/manifest-merger-release-report.txt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Application/manifest-merger-release-report.txt	(revision )
+++ Application/manifest-merger-release-report.txt	(revision )
@@ -0,0 +1,77 @@
+-- Merging decision tree log ---
+manifest
+ADDED from AndroidManifest.xml:20:1
+	xmlns:android
+		ADDED from AndroidManifest.xml:21:5
+	package
+		ADDED from AndroidManifest.xml:22:5
+	android:versionName
+		ADDED from AndroidManifest.xml:24:5
+	android:versionCode
+		ADDED from AndroidManifest.xml:23:5
+		INJECTED from AndroidManifest.xml:0:0
+		INJECTED from AndroidManifest.xml:0:0
+uses-feature#android.hardware.usb.UsbAccessory
+ADDED from AndroidManifest.xml:25:5
+	android:name
+		ADDED from AndroidManifest.xml:25:19
+uses-permission#android.permission.INTERNET
+ADDED from AndroidManifest.xml:27:5
+	android:name
+		ADDED from AndroidManifest.xml:27:22
+uses-permission#android.permission.ACCESS_NETWORK_STATE
+ADDED from AndroidManifest.xml:28:5
+	android:name
+		ADDED from AndroidManifest.xml:28:22
+application
+ADDED from AndroidManifest.xml:29:5
+MERGED from com.android.support:support-v4:21.0.2:16:5
+MERGED from com.android.support:gridlayout-v7:21.0.2:16:5
+MERGED from com.android.support:support-v4:21.0.2:16:5
+MERGED from com.android.support:cardview-v7:21.0.2:16:5
+	android:label
+		ADDED from AndroidManifest.xml:30:9
+	android:allowBackup
+		ADDED from AndroidManifest.xml:33:9
+	android:icon
+		ADDED from AndroidManifest.xml:31:9
+	android:theme
+		ADDED from AndroidManifest.xml:32:9
+activity#com.example.android.networkconnect.MainActivity
+ADDED from AndroidManifest.xml:35:9
+	android:screenOrientation
+		ADDED from AndroidManifest.xml:39:13
+	android:label
+		ADDED from AndroidManifest.xml:37:13
+	android:uiOptions
+		ADDED from AndroidManifest.xml:38:13
+	android:name
+		ADDED from AndroidManifest.xml:36:13
+intent-filter#android.intent.action.MAIN+android.intent.category.LAUNCHER
+ADDED from AndroidManifest.xml:41:13
+action#android.intent.action.MAIN
+ADDED from AndroidManifest.xml:42:17
+	android:name
+		ADDED from AndroidManifest.xml:42:25
+category#android.intent.category.LAUNCHER
+ADDED from AndroidManifest.xml:43:17
+	android:name
+		ADDED from AndroidManifest.xml:43:27
+intent-filter#android.hardware.usb.action.USB_DEVICE_ATTACHED
+ADDED from AndroidManifest.xml:45:13
+action#android.hardware.usb.action.USB_DEVICE_ATTACHED
+ADDED from AndroidManifest.xml:46:17
+	android:name
+		ADDED from AndroidManifest.xml:46:25
+uses-sdk
+INJECTED from AndroidManifest.xml:0:0 reason: use-sdk injection requested
+MERGED from com.android.support:support-v4:21.0.2:15:5
+MERGED from com.android.support:gridlayout-v7:21.0.2:15:5
+MERGED from com.android.support:support-v4:21.0.2:15:5
+MERGED from com.android.support:cardview-v7:21.0.2:15:5
+	android:targetSdkVersion
+		INJECTED from AndroidManifest.xml:0:0
+		INJECTED from AndroidManifest.xml:0:0
+	android:minSdkVersion
+		INJECTED from AndroidManifest.xml:0:0
+		INJECTED from AndroidManifest.xml:0:0
Index: Application/build/generated/source/buildConfig/debug/com/example/android/networkconnect/BuildConfig.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Application/build/generated/source/buildConfig/debug/com/example/android/networkconnect/BuildConfig.java	(revision )
+++ Application/build/generated/source/buildConfig/debug/com/example/android/networkconnect/BuildConfig.java	(revision )
@@ -0,0 +1,13 @@
+/**
+ * Automatically generated file. DO NOT MODIFY
+ */
+package com.example.android.networkconnect;
+
+public final class BuildConfig {
+  public static final boolean DEBUG = Boolean.parseBoolean("true");
+  public static final String APPLICATION_ID = "com.example.android.networkconnect";
+  public static final String BUILD_TYPE = "debug";
+  public static final String FLAVOR = "";
+  public static final int VERSION_CODE = 1;
+  public static final String VERSION_NAME = "";
+}
Index: Application/src/main/res/values-sw600dp/template-styles.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Application/src/main/res/values-sw600dp/template-styles.xml	(revision )
+++ Application/src/main/res/values-sw600dp/template-styles.xml	(revision )
@@ -0,0 +1,25 @@
+<!--
+  Copyright 2013 The Android Open Source Project
+
+  Licensed under the Apache License, Version 2.0 (the "License");
+  you may not use this file except in compliance with the License.
+  You may obtain a copy of the License at
+
+      http://www.apache.org/licenses/LICENSE-2.0
+
+  Unless required by applicable law or agreed to in writing, software
+  distributed under the License is distributed on an "AS IS" BASIS,
+  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+  See the License for the specific language governing permissions and
+  limitations under the License.
+  -->
+
+<resources>
+
+    <style name="Widget.SampleMessage">
+        <item name="android:textAppearance">?android:textAppearanceLarge</item>
+        <item name="android:lineSpacingMultiplier">1.2</item>
+        <item name="android:shadowDy">-6.5</item>
+    </style>
+
+</resources>
Index: Application/src/main/res/values-sw600dp/template-dimens.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Application/src/main/res/values-sw600dp/template-dimens.xml	(revision )
+++ Application/src/main/res/values-sw600dp/template-dimens.xml	(revision )
@@ -0,0 +1,24 @@
+<!--
+  Copyright 2013 The Android Open Source Project
+
+  Licensed under the Apache License, Version 2.0 (the "License");
+  you may not use this file except in compliance with the License.
+  You may obtain a copy of the License at
+
+      http://www.apache.org/licenses/LICENSE-2.0
+
+  Unless required by applicable law or agreed to in writing, software
+  distributed under the License is distributed on an "AS IS" BASIS,
+  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+  See the License for the specific language governing permissions and
+  limitations under the License.
+  -->
+
+<resources>
+
+    <!-- Semantic definitions -->
+
+    <dimen name="horizontal_page_margin">@dimen/margin_huge</dimen>
+    <dimen name="vertical_page_margin">@dimen/margin_medium</dimen>
+
+</resources>
Index: Application/build/intermediates/exploded-aar/com.android.support/gridlayout-v7/21.0.2/res/values/values.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Application/build/intermediates/exploded-aar/com.android.support/gridlayout-v7/21.0.2/res/values/values.xml	(revision )
+++ Application/build/intermediates/exploded-aar/com.android.support/gridlayout-v7/21.0.2/res/values/values.xml	(revision )
@@ -0,0 +1,200 @@
+<?xml version="1.0" encoding="utf-8"?>
+<resources>
+
+    <declare-styleable name="GridLayout">
+
+        <!--
+              support versions. All attributes not present in ViewGroup/View are
+              redefined in the support library namespace.
+        -->
+
+
+        <!--
+        The orientation property is not used during layout. It is only used to
+        allocate row and column parameters when they are not specified by its children's
+        layout parameters. GridLayout works like LinearLayout in this case;
+        putting all the components either in a single row or in a single column -
+        depending on the value of this flag. In the horizontal case, a columnCount
+        property may be additionally supplied to force new rows to be created when a
+        row is full. The rowCount attribute may be used similarly in the vertical case.
+        The default is horizontal.
+        -->
+        <attr name="orientation">
+
+            <!-- Defines an horizontal widget. -->
+            <enum name="horizontal" value="0" />
+            <!-- Defines a vertical widget. -->
+            <enum name="vertical" value="1" />
+        </attr>
+        <!-- The maximum number of rows to create when automatically positioning children. -->
+        <attr name="rowCount" format="integer" />
+        <!-- The maximum number of columns to create when automatically positioning children. -->
+        <attr name="columnCount" format="integer" />
+        <!--
+        When set to true, tells GridLayout to use default margins when none are specified
+        in a view's layout parameters.
+        The default value is false.
+        See {@link android.widget.GridLayout#setUseDefaultMargins(boolean)}.
+        -->
+        <attr name="useDefaultMargins" format="boolean" />
+        <!--
+        When set to alignMargins, causes alignment to take place between the outer
+        boundary of a view, as defined by its margins. When set to alignBounds,
+        causes alignment to take place between the edges of the view.
+        The default is alignMargins.
+        See {@link android.widget.GridLayout#setAlignmentMode(int)}.
+        -->
+        <attr name="alignmentMode">
+
+            <!--
+            Align the bounds of the children.
+            See {@link android.widget.GridLayout#ALIGN_BOUNDS}.
+            -->
+            <enum name="alignBounds" value="0" />
+            <!--
+            Align the margins of the children.
+            See {@link android.widget.GridLayout#ALIGN_MARGINS}.
+            -->
+            <enum name="alignMargins" value="1" />
+        </attr>
+        <!--
+        When set to true, forces row boundaries to appear in the same order
+        as row indices.
+        The default is true.
+        See {@link android.widget.GridLayout#setRowOrderPreserved(boolean)}.
+        -->
+        <attr name="rowOrderPreserved" format="boolean" />
+        <!--
+        When set to true, forces column boundaries to appear in the same order
+        as column indices.
+        The default is true.
+        See {@link android.widget.GridLayout#setColumnOrderPreserved(boolean)}.
+        -->
+        <attr name="columnOrderPreserved" format="boolean" />
+    </declare-styleable>
+    <declare-styleable name="GridLayout_Layout">
+
+        <!--
+              support versions. All attributes not present in MarginLayout are
+              redefined in the support library name space.
+        -->
+
+
+        <!-- START MarginLayout layoutparams -->
+
+        <attr name="android:layout_width" />
+        <attr name="android:layout_height" />
+        <!--
+              Specifies extra space on the left, top, right and bottom
+              sides of this view. This space is outside this view's bounds.
+        -->
+        <attr name="android:layout_margin" />
+        <!--
+              Specifies extra space on the left side of this view.
+              This space is outside this view's bounds.
+        -->
+        <attr name="android:layout_marginLeft" />
+        <!--
+              Specifies extra space on the top side of this view.
+              This space is outside this view's bounds.
+        -->
+        <attr name="android:layout_marginTop" />
+        <!--
+              Specifies extra space on the right side of this view.
+              This space is outside this view's bounds.
+        -->
+        <attr name="android:layout_marginRight" />
+        <!--
+              Specifies extra space on the bottom side of this view.
+              This space is outside this view's bounds.
+        -->
+        <attr name="android:layout_marginBottom" />
+
+        <!-- END MarginLayout layoutparams -->
+
+
+        <!--
+        The row boundary delimiting the top of the group of cells
+        occupied by this view.
+        -->
+        <attr name="layout_row" format="integer" />
+        <!--
+        The row span: the difference between the top and bottom
+        boundaries delimiting the group of cells occupied by this view.
+        The default is one.
+        See {@link android.widget.GridLayout.Spec}.
+        -->
+        <attr name="layout_rowSpan" format="integer" min="1" />
+        <!--
+        The relative proportion of vertical space that should be allocated to this view
+        during excess space distribution.
+        -->
+        <attr name="layout_rowWeight" format="float" />
+        <!--
+        The column boundary delimiting the left of the group of cells
+        occupied by this view.
+        -->
+        <attr name="layout_column" format="integer" />
+        <!--
+        The column span: the difference between the right and left
+        boundaries delimiting the group of cells occupied by this view.
+        The default is one.
+        See {@link android.widget.GridLayout.Spec}.
+        -->
+        <attr name="layout_columnSpan" format="integer" min="1" />
+        <!--
+        The relative proportion of horizontal space that should be allocated to this view
+        during excess space distribution.
+        -->
+        <attr name="layout_columnWeight" format="float" />
+        <!--
+        Gravity specifies how a component should be placed in its group of cells.
+        The default is LEFT | BASELINE.
+        See {@link android.widget.GridLayout.LayoutParams#setGravity(int)}.
+        -->
+        <attr name="layout_gravity">
+
+            <!-- Push object to the top of its container, not changing its size. -->
+            <flag name="top" value="0x30" />
+            <!-- Push object to the bottom of its container, not changing its size. -->
+            <flag name="bottom" value="0x50" />
+            <!-- Push object to the left of its container, not changing its size. -->
+            <flag name="left" value="0x03" />
+            <!-- Push object to the right of its container, not changing its size. -->
+            <flag name="right" value="0x05" />
+            <!-- Place object in the vertical center of its container, not changing its size. -->
+            <flag name="center_vertical" value="0x10" />
+            <!-- Grow the vertical size of the object if needed so it completely fills its container. -->
+            <flag name="fill_vertical" value="0x70" />
+            <!-- Place object in the horizontal center of its container, not changing its size. -->
+            <flag name="center_horizontal" value="0x01" />
+            <!-- Grow the horizontal size of the object if needed so it completely fills its container. -->
+            <flag name="fill_horizontal" value="0x07" />
+            <!-- Place the object in the center of its container in both the vertical and horizontal axis, not changing its size. -->
+            <flag name="center" value="0x11" />
+            <!-- Grow the horizontal and vertical size of the object if needed so it completely fills its container. -->
+            <flag name="fill" value="0x77" />
+            <!--
+             Additional option that can be set to have the top and/or bottom edges of
+             the child clipped to its container's bounds.
+             The clip will be based on the vertical gravity: a top gravity will clip the bottom
+             edge, a bottom gravity will clip the top edge, and neither will clip both edges.
+            -->
+            <flag name="clip_vertical" value="0x80" />
+            <!--
+             Additional option that can be set to have the left and/or right edges of
+             the child clipped to its container's bounds.
+             The clip will be based on the horizontal gravity: a left gravity will clip the right
+             edge, a right gravity will clip the left edge, and neither will clip both edges.
+            -->
+            <flag name="clip_horizontal" value="0x08" />
+            <!-- Push object to the beginning of its container, not changing its size. -->
+            <flag name="start" value="0x00800003" />
+            <!-- Push object to the end of its container, not changing its size. -->
+            <flag name="end" value="0x00800005" />
+        </attr>
+    </declare-styleable>
+
+    <dimen name="default_gap">16dip</dimen>
+
+</resources>
